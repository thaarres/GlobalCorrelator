-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity tk2calo_caloalgo is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    calo_0_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    calo_1_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    calo_2_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    calo_3_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    calo_4_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    calo_5_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    calo_6_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    calo_7_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    calo_8_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    calo_9_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    calo_0_hwEta_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_1_hwEta_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_2_hwEta_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_3_hwEta_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_4_hwEta_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_5_hwEta_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_6_hwEta_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_7_hwEta_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_8_hwEta_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_9_hwEta_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_0_hwPhi_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_1_hwPhi_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_2_hwPhi_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_3_hwPhi_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_4_hwPhi_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_5_hwPhi_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_6_hwPhi_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_7_hwPhi_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_8_hwPhi_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_9_hwPhi_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    sumtk_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    sumtk_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    sumtk_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    sumtk_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    sumtk_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    sumtk_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    sumtk_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    sumtk_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    sumtk_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    sumtk_9_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    sumtkerr2_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    sumtkerr2_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    sumtkerr2_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
    sumtkerr2_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
    sumtkerr2_4_read : IN STD_LOGIC_VECTOR (31 downto 0);
    sumtkerr2_5_read : IN STD_LOGIC_VECTOR (31 downto 0);
    sumtkerr2_6_read : IN STD_LOGIC_VECTOR (31 downto 0);
    sumtkerr2_7_read : IN STD_LOGIC_VECTOR (31 downto 0);
    sumtkerr2_8_read : IN STD_LOGIC_VECTOR (31 downto 0);
    sumtkerr2_9_read : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_17 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_18 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_19 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_20 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_21 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_22 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_23 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_24 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_25 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_26 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_27 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_28 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_29 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_30 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_31 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_32 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_33 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_34 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_35 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_36 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_37 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_38 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_39 : OUT STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of tk2calo_caloalgo is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal calo_1_hwPt_V_read_4_reg_1820 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal calo_0_hwPt_V_read_4_reg_1825 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1830 : STD_LOGIC_VECTOR (0 downto 0);
    signal calopt_V_2_fu_428_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal calopt_V_2_reg_1836 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_fu_434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1843 : STD_LOGIC_VECTOR (0 downto 0);
    signal calopt_V_2_1_fu_440_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal calopt_V_2_1_reg_1849 : STD_LOGIC_VECTOR (15 downto 0);
    signal calo_3_hwPt_V_read_4_reg_1856 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal calo_2_hwPt_V_read_4_reg_1861 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_fu_1760_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_reg_1866 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_1_fu_1766_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_1_reg_1871 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1876 : STD_LOGIC_VECTOR (0 downto 0);
    signal calopt_V_2_2_fu_458_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal calopt_V_2_2_reg_1882 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1889 : STD_LOGIC_VECTOR (0 downto 0);
    signal calopt_V_2_3_fu_470_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal calopt_V_2_3_reg_1895 : STD_LOGIC_VECTOR (15 downto 0);
    signal calo_5_hwPt_V_read_4_reg_1902 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal calo_4_hwPt_V_read_4_reg_1907 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_0_hwPt_V_writ_fu_538_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_0_hwPt_V_writ_reg_1912 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_1_hwPt_V_writ_fu_606_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_1_hwPt_V_writ_reg_1919 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_2_fu_1772_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_2_reg_1926 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_3_fu_1778_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_3_reg_1931 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1936 : STD_LOGIC_VECTOR (0 downto 0);
    signal calopt_V_2_4_fu_624_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal calopt_V_2_4_reg_1942 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1949 : STD_LOGIC_VECTOR (0 downto 0);
    signal calopt_V_2_5_fu_636_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal calopt_V_2_5_reg_1955 : STD_LOGIC_VECTOR (15 downto 0);
    signal calo_7_hwPt_V_read_4_reg_1962 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal calo_6_hwPt_V_read_4_reg_1967 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_2_hwPt_V_writ_fu_704_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_2_hwPt_V_writ_reg_1972 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_3_hwPt_V_writ_fu_772_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_3_hwPt_V_writ_reg_1979 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_4_fu_1784_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_4_reg_1986 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_5_fu_1790_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_5_reg_1991 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_784_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_1996 : STD_LOGIC_VECTOR (0 downto 0);
    signal calopt_V_2_6_fu_790_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal calopt_V_2_6_reg_2002 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_fu_796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_2009 : STD_LOGIC_VECTOR (0 downto 0);
    signal calopt_V_2_7_fu_802_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal calopt_V_2_7_reg_2015 : STD_LOGIC_VECTOR (15 downto 0);
    signal calo_9_hwPt_V_read_4_reg_2022 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal calo_8_hwPt_V_read_4_reg_2027 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_4_hwPt_V_writ_fu_870_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_4_hwPt_V_writ_reg_2032 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_5_hwPt_V_writ_fu_938_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_5_hwPt_V_writ_reg_2039 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_6_fu_1796_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_6_reg_2046 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_7_fu_1802_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_7_reg_2051 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_950_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_2056 : STD_LOGIC_VECTOR (0 downto 0);
    signal calopt_V_2_8_fu_956_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal calopt_V_2_8_reg_2062 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_fu_962_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_2069 : STD_LOGIC_VECTOR (0 downto 0);
    signal calopt_V_2_9_fu_968_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal calopt_V_2_9_reg_2075 : STD_LOGIC_VECTOR (15 downto 0);
    signal calo_9_hwPhi_V_read_5_reg_2082 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_8_hwPhi_V_read_5_reg_2087 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_7_hwPhi_V_read_5_reg_2092 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_6_hwPhi_V_read_5_reg_2097 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_5_hwPhi_V_read_5_reg_2102 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_4_hwPhi_V_read_5_reg_2107 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_3_hwPhi_V_read_5_reg_2112 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_2_hwPhi_V_read_5_reg_2117 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_1_hwPhi_V_read_5_reg_2122 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_0_hwPhi_V_read_5_reg_2127 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_9_hwEta_V_read_5_reg_2132 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_8_hwEta_V_read_5_reg_2137 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_7_hwEta_V_read_5_reg_2142 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_6_hwEta_V_read_5_reg_2147 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_5_hwEta_V_read_5_reg_2152 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_4_hwEta_V_read_5_reg_2157 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_3_hwEta_V_read_5_reg_2162 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_2_hwEta_V_read_5_reg_2167 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_1_hwEta_V_read_5_reg_2172 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_0_hwEta_V_read_5_reg_2177 : STD_LOGIC_VECTOR (9 downto 0);
    signal pfout_6_hwPt_V_writ_fu_1036_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_6_hwPt_V_writ_reg_2182 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_7_hwPt_V_writ_fu_1104_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_7_hwPt_V_writ_reg_2189 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_8_fu_1808_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_8_reg_2196 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_8_fu_1127_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_8_reg_2201 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_9_fu_1814_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_9_reg_2206 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_9_fu_1150_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_9_reg_2211 : STD_LOGIC_VECTOR (31 downto 0);
    signal pfout_8_hwPt_V_writ_fu_1197_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_8_hwPt_V_writ_reg_2216 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_9_hwPt_V_writ_fu_1244_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_9_hwPt_V_writ_reg_2223 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_port_reg_calo_2_hwPt_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_calo_3_hwPt_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_calo_4_hwPt_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_calo_5_hwPt_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_calo_6_hwPt_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_calo_7_hwPt_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_calo_8_hwPt_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_calo_9_hwPt_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_calo_0_hwEta_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_1_hwEta_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_2_hwEta_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_3_hwEta_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_4_hwEta_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_5_hwEta_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_6_hwEta_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_7_hwEta_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_8_hwEta_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_9_hwEta_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_0_hwPhi_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_1_hwPhi_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_2_hwPhi_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_3_hwPhi_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_4_hwPhi_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_5_hwPhi_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_6_hwPhi_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_7_hwPhi_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_8_hwPhi_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_9_hwPhi_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_sumtk_2_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_sumtk_3_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_sumtk_4_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_sumtk_5_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_sumtk_6_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_sumtk_7_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_sumtk_8_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_sumtk_9_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_sumtkerr2_0_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_sumtkerr2_1_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_sumtkerr2_2_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_sumtkerr2_3_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_sumtkerr2_4_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_sumtkerr2_5_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_sumtkerr2_6_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_sumtkerr2_7_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_sumtkerr2_8_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_sumtkerr2_9_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal tmp_17_fu_484_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_18_fu_494_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_fu_498_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_509_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp50_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_476_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp3_fu_526_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp3_cast_fu_534_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_fu_552_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_31_1_fu_562_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_1_fu_566_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_1_fu_572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp51_fu_582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_1_fu_547_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_503_fu_544_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp8_fu_594_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp8_cast_fu_602_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal tmp_23_fu_650_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_31_2_fu_660_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_2_fu_664_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_2_fu_670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp10_fu_675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp52_fu_680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_2_fu_645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_fu_686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_504_fu_642_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp13_fu_692_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp13_cast_fu_700_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_fu_718_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_31_3_fu_728_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_3_fu_732_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_3_fu_738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp15_fu_743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp53_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_3_fu_713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp17_fu_754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_505_fu_710_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp18_fu_760_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp18_cast_fu_768_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal tmp_25_fu_816_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_31_4_fu_826_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_4_fu_830_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_4_fu_836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp20_fu_841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp54_fu_846_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_4_fu_811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp22_fu_852_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_506_fu_808_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp23_fu_858_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp23_cast_fu_866_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_26_fu_884_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_31_5_fu_894_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_5_fu_898_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_5_fu_904_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp25_fu_909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp55_fu_914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_5_fu_879_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp27_fu_920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_507_fu_876_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp28_fu_926_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp28_cast_fu_934_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal tmp_27_fu_982_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_31_6_fu_992_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_6_fu_996_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_6_fu_1002_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp30_fu_1007_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp56_fu_1012_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_6_fu_977_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp32_fu_1018_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_508_fu_974_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp33_fu_1024_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp33_cast_fu_1032_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_28_fu_1050_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_31_7_fu_1060_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_7_fu_1064_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_7_fu_1070_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp35_fu_1075_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp57_fu_1080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_7_fu_1045_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp37_fu_1086_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_509_fu_1042_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp38_fu_1092_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp38_cast_fu_1100_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_29_fu_1113_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_31_8_fu_1123_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_fu_1136_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_31_9_fu_1146_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_8_fu_1164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp40_fu_1168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp58_fu_1173_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_8_fu_1159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp42_fu_1179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_510_fu_1156_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp43_fu_1185_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp43_cast_fu_1193_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_32_9_fu_1211_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp45_fu_1215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp59_fu_1220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_9_fu_1206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp47_fu_1226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_511_fu_1203_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp48_fu_1232_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp48_cast_fu_1240_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_20_fu_1250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_1269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_1_fu_1278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_1_fu_1297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_2_fu_1306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_2_fu_1325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_3_fu_1334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_3_fu_1353_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_4_fu_1362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_4_fu_1381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_5_fu_1390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_5_fu_1409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_6_fu_1418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_6_fu_1437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_7_fu_1446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_7_fu_1465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_8_fu_1474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_8_fu_1493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_9_fu_1502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_9_fu_1521_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal calo_0_hwEta_V_read_1_fu_1255_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_1_hwEta_V_read_1_fu_1283_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_2_hwEta_V_read_1_fu_1311_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_3_hwEta_V_read_1_fu_1339_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_4_hwEta_V_read_1_fu_1367_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_5_hwEta_V_read_1_fu_1395_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_6_hwEta_V_read_1_fu_1423_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_7_hwEta_V_read_1_fu_1451_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_8_hwEta_V_read_1_fu_1479_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_9_hwEta_V_read_1_fu_1507_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_0_hwPhi_V_read_1_fu_1262_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_1_hwPhi_V_read_1_fu_1290_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_2_hwPhi_V_read_1_fu_1318_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_3_hwPhi_V_read_1_fu_1346_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_4_hwPhi_V_read_1_fu_1374_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_5_hwPhi_V_read_1_fu_1402_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_6_hwPhi_V_read_1_fu_1430_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_7_hwPhi_V_read_1_fu_1458_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_8_hwPhi_V_read_1_fu_1486_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_9_hwPhi_V_read_1_fu_1514_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pfout_0_hwId_V_writ_fu_1274_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal pfout_1_hwId_V_writ_fu_1302_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal pfout_2_hwId_V_writ_fu_1330_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal pfout_3_hwId_V_writ_fu_1358_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal pfout_4_hwId_V_writ_fu_1386_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal pfout_5_hwId_V_writ_fu_1414_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal pfout_6_hwId_V_writ_fu_1442_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal pfout_7_hwId_V_writ_fu_1470_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal pfout_8_hwId_V_writ_fu_1498_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal pfout_9_hwId_V_writ_fu_1526_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_V_fu_1760_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_fu_446_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_fu_1760_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_1_fu_1766_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_1_fu_449_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_1_fu_1766_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_2_fu_1772_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_2_fu_612_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_2_fu_1772_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_3_fu_1778_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_3_fu_615_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_3_fu_1778_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_4_fu_1784_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_4_fu_778_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_4_fu_1784_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_5_fu_1790_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_5_fu_781_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_5_fu_1790_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_6_fu_1796_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_6_fu_944_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_6_fu_1796_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_7_fu_1802_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_7_fu_947_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_7_fu_1802_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_8_fu_1808_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_8_fu_1110_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_8_fu_1808_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_9_fu_1814_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_9_fu_1133_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_9_fu_1814_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;

    component mp7wrapped_pfalgokbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mp7wrapped_pfalgokbM_U1399 : component mp7wrapped_pfalgokbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => r_V_fu_1760_p0,
        din1 => r_V_fu_1760_p1,
        dout => r_V_fu_1760_p2);

    mp7wrapped_pfalgokbM_U1400 : component mp7wrapped_pfalgokbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => r_V_1_fu_1766_p0,
        din1 => r_V_1_fu_1766_p1,
        dout => r_V_1_fu_1766_p2);

    mp7wrapped_pfalgokbM_U1401 : component mp7wrapped_pfalgokbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => r_V_2_fu_1772_p0,
        din1 => r_V_2_fu_1772_p1,
        dout => r_V_2_fu_1772_p2);

    mp7wrapped_pfalgokbM_U1402 : component mp7wrapped_pfalgokbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => r_V_3_fu_1778_p0,
        din1 => r_V_3_fu_1778_p1,
        dout => r_V_3_fu_1778_p2);

    mp7wrapped_pfalgokbM_U1403 : component mp7wrapped_pfalgokbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => r_V_4_fu_1784_p0,
        din1 => r_V_4_fu_1784_p1,
        dout => r_V_4_fu_1784_p2);

    mp7wrapped_pfalgokbM_U1404 : component mp7wrapped_pfalgokbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => r_V_5_fu_1790_p0,
        din1 => r_V_5_fu_1790_p1,
        dout => r_V_5_fu_1790_p2);

    mp7wrapped_pfalgokbM_U1405 : component mp7wrapped_pfalgokbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => r_V_6_fu_1796_p0,
        din1 => r_V_6_fu_1796_p1,
        dout => r_V_6_fu_1796_p2);

    mp7wrapped_pfalgokbM_U1406 : component mp7wrapped_pfalgokbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => r_V_7_fu_1802_p0,
        din1 => r_V_7_fu_1802_p1,
        dout => r_V_7_fu_1802_p2);

    mp7wrapped_pfalgokbM_U1407 : component mp7wrapped_pfalgokbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => r_V_8_fu_1808_p0,
        din1 => r_V_8_fu_1808_p1,
        dout => r_V_8_fu_1808_p2);

    mp7wrapped_pfalgokbM_U1408 : component mp7wrapped_pfalgokbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => r_V_9_fu_1814_p0,
        din1 => r_V_9_fu_1814_p1,
        dout => r_V_9_fu_1814_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_port_reg_calo_0_hwEta_V_read <= calo_0_hwEta_V_read;
                ap_port_reg_calo_0_hwPhi_V_read <= calo_0_hwPhi_V_read;
                ap_port_reg_calo_1_hwEta_V_read <= calo_1_hwEta_V_read;
                ap_port_reg_calo_1_hwPhi_V_read <= calo_1_hwPhi_V_read;
                ap_port_reg_calo_2_hwEta_V_read <= calo_2_hwEta_V_read;
                ap_port_reg_calo_2_hwPhi_V_read <= calo_2_hwPhi_V_read;
                ap_port_reg_calo_2_hwPt_V_read <= calo_2_hwPt_V_read;
                ap_port_reg_calo_3_hwEta_V_read <= calo_3_hwEta_V_read;
                ap_port_reg_calo_3_hwPhi_V_read <= calo_3_hwPhi_V_read;
                ap_port_reg_calo_3_hwPt_V_read <= calo_3_hwPt_V_read;
                ap_port_reg_calo_4_hwEta_V_read <= calo_4_hwEta_V_read;
                ap_port_reg_calo_4_hwPhi_V_read <= calo_4_hwPhi_V_read;
                ap_port_reg_calo_4_hwPt_V_read <= calo_4_hwPt_V_read;
                ap_port_reg_calo_5_hwEta_V_read <= calo_5_hwEta_V_read;
                ap_port_reg_calo_5_hwPhi_V_read <= calo_5_hwPhi_V_read;
                ap_port_reg_calo_5_hwPt_V_read <= calo_5_hwPt_V_read;
                ap_port_reg_calo_6_hwEta_V_read <= calo_6_hwEta_V_read;
                ap_port_reg_calo_6_hwPhi_V_read <= calo_6_hwPhi_V_read;
                ap_port_reg_calo_6_hwPt_V_read <= calo_6_hwPt_V_read;
                ap_port_reg_calo_7_hwEta_V_read <= calo_7_hwEta_V_read;
                ap_port_reg_calo_7_hwPhi_V_read <= calo_7_hwPhi_V_read;
                ap_port_reg_calo_7_hwPt_V_read <= calo_7_hwPt_V_read;
                ap_port_reg_calo_8_hwEta_V_read <= calo_8_hwEta_V_read;
                ap_port_reg_calo_8_hwPhi_V_read <= calo_8_hwPhi_V_read;
                ap_port_reg_calo_8_hwPt_V_read <= calo_8_hwPt_V_read;
                ap_port_reg_calo_9_hwEta_V_read <= calo_9_hwEta_V_read;
                ap_port_reg_calo_9_hwPhi_V_read <= calo_9_hwPhi_V_read;
                ap_port_reg_calo_9_hwPt_V_read <= calo_9_hwPt_V_read;
                ap_port_reg_sumtk_2_V_read <= sumtk_2_V_read;
                ap_port_reg_sumtk_3_V_read <= sumtk_3_V_read;
                ap_port_reg_sumtk_4_V_read <= sumtk_4_V_read;
                ap_port_reg_sumtk_5_V_read <= sumtk_5_V_read;
                ap_port_reg_sumtk_6_V_read <= sumtk_6_V_read;
                ap_port_reg_sumtk_7_V_read <= sumtk_7_V_read;
                ap_port_reg_sumtk_8_V_read <= sumtk_8_V_read;
                ap_port_reg_sumtk_9_V_read <= sumtk_9_V_read;
                ap_port_reg_sumtkerr2_0_read <= sumtkerr2_0_read;
                ap_port_reg_sumtkerr2_1_read <= sumtkerr2_1_read;
                ap_port_reg_sumtkerr2_2_read <= sumtkerr2_2_read;
                ap_port_reg_sumtkerr2_3_read <= sumtkerr2_3_read;
                ap_port_reg_sumtkerr2_4_read <= sumtkerr2_4_read;
                ap_port_reg_sumtkerr2_5_read <= sumtkerr2_5_read;
                ap_port_reg_sumtkerr2_6_read <= sumtkerr2_6_read;
                ap_port_reg_sumtkerr2_7_read <= sumtkerr2_7_read;
                ap_port_reg_sumtkerr2_8_read <= sumtkerr2_8_read;
                ap_port_reg_sumtkerr2_9_read <= sumtkerr2_9_read;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                calo_0_hwEta_V_read_5_reg_2177 <= ap_port_reg_calo_0_hwEta_V_read;
                calo_0_hwPhi_V_read_5_reg_2127 <= ap_port_reg_calo_0_hwPhi_V_read;
                calo_1_hwEta_V_read_5_reg_2172 <= ap_port_reg_calo_1_hwEta_V_read;
                calo_1_hwPhi_V_read_5_reg_2122 <= ap_port_reg_calo_1_hwPhi_V_read;
                calo_2_hwEta_V_read_5_reg_2167 <= ap_port_reg_calo_2_hwEta_V_read;
                calo_2_hwPhi_V_read_5_reg_2117 <= ap_port_reg_calo_2_hwPhi_V_read;
                calo_3_hwEta_V_read_5_reg_2162 <= ap_port_reg_calo_3_hwEta_V_read;
                calo_3_hwPhi_V_read_5_reg_2112 <= ap_port_reg_calo_3_hwPhi_V_read;
                calo_4_hwEta_V_read_5_reg_2157 <= ap_port_reg_calo_4_hwEta_V_read;
                calo_4_hwPhi_V_read_5_reg_2107 <= ap_port_reg_calo_4_hwPhi_V_read;
                calo_5_hwEta_V_read_5_reg_2152 <= ap_port_reg_calo_5_hwEta_V_read;
                calo_5_hwPhi_V_read_5_reg_2102 <= ap_port_reg_calo_5_hwPhi_V_read;
                calo_6_hwEta_V_read_5_reg_2147 <= ap_port_reg_calo_6_hwEta_V_read;
                calo_6_hwPhi_V_read_5_reg_2097 <= ap_port_reg_calo_6_hwPhi_V_read;
                calo_7_hwEta_V_read_5_reg_2142 <= ap_port_reg_calo_7_hwEta_V_read;
                calo_7_hwPhi_V_read_5_reg_2092 <= ap_port_reg_calo_7_hwPhi_V_read;
                calo_8_hwEta_V_read_5_reg_2137 <= ap_port_reg_calo_8_hwEta_V_read;
                calo_8_hwPhi_V_read_5_reg_2087 <= ap_port_reg_calo_8_hwPhi_V_read;
                calo_9_hwEta_V_read_5_reg_2132 <= ap_port_reg_calo_9_hwEta_V_read;
                calo_9_hwPhi_V_read_5_reg_2082 <= ap_port_reg_calo_9_hwPhi_V_read;
                pfout_6_hwPt_V_writ_reg_2182 <= pfout_6_hwPt_V_writ_fu_1036_p3;
                pfout_7_hwPt_V_writ_reg_2189 <= pfout_7_hwPt_V_writ_fu_1104_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                calo_0_hwPt_V_read_4_reg_1825 <= calo_0_hwPt_V_read;
                calo_1_hwPt_V_read_4_reg_1820 <= calo_1_hwPt_V_read;
                calopt_V_2_1_reg_1849 <= calopt_V_2_1_fu_440_p2;
                calopt_V_2_reg_1836 <= calopt_V_2_fu_428_p2;
                pfout_8_hwPt_V_writ_reg_2216 <= pfout_8_hwPt_V_writ_fu_1197_p3;
                pfout_9_hwPt_V_writ_reg_2223 <= pfout_9_hwPt_V_writ_fu_1244_p3;
                tmp_1_reg_1843 <= tmp_1_fu_434_p2;
                tmp_s_reg_1830 <= tmp_s_fu_422_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                calo_2_hwPt_V_read_4_reg_1861 <= ap_port_reg_calo_2_hwPt_V_read;
                calo_3_hwPt_V_read_4_reg_1856 <= ap_port_reg_calo_3_hwPt_V_read;
                calopt_V_2_2_reg_1882 <= calopt_V_2_2_fu_458_p2;
                calopt_V_2_3_reg_1895 <= calopt_V_2_3_fu_470_p2;
                tmp_2_reg_1876 <= tmp_2_fu_452_p2;
                tmp_3_reg_1889 <= tmp_3_fu_464_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                calo_4_hwPt_V_read_4_reg_1907 <= ap_port_reg_calo_4_hwPt_V_read;
                calo_5_hwPt_V_read_4_reg_1902 <= ap_port_reg_calo_5_hwPt_V_read;
                calopt_V_2_4_reg_1942 <= calopt_V_2_4_fu_624_p2;
                calopt_V_2_5_reg_1955 <= calopt_V_2_5_fu_636_p2;
                pfout_0_hwPt_V_writ_reg_1912 <= pfout_0_hwPt_V_writ_fu_538_p3;
                pfout_1_hwPt_V_writ_reg_1919 <= pfout_1_hwPt_V_writ_fu_606_p3;
                tmp_4_reg_1936 <= tmp_4_fu_618_p2;
                tmp_5_reg_1949 <= tmp_5_fu_630_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                calo_6_hwPt_V_read_4_reg_1967 <= ap_port_reg_calo_6_hwPt_V_read;
                calo_7_hwPt_V_read_4_reg_1962 <= ap_port_reg_calo_7_hwPt_V_read;
                calopt_V_2_6_reg_2002 <= calopt_V_2_6_fu_790_p2;
                calopt_V_2_7_reg_2015 <= calopt_V_2_7_fu_802_p2;
                pfout_2_hwPt_V_writ_reg_1972 <= pfout_2_hwPt_V_writ_fu_704_p3;
                pfout_3_hwPt_V_writ_reg_1979 <= pfout_3_hwPt_V_writ_fu_772_p3;
                tmp_6_reg_1996 <= tmp_6_fu_784_p2;
                tmp_7_reg_2009 <= tmp_7_fu_796_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                calo_8_hwPt_V_read_4_reg_2027 <= ap_port_reg_calo_8_hwPt_V_read;
                calo_9_hwPt_V_read_4_reg_2022 <= ap_port_reg_calo_9_hwPt_V_read;
                calopt_V_2_8_reg_2062 <= calopt_V_2_8_fu_956_p2;
                calopt_V_2_9_reg_2075 <= calopt_V_2_9_fu_968_p2;
                pfout_4_hwPt_V_writ_reg_2032 <= pfout_4_hwPt_V_writ_fu_870_p3;
                pfout_5_hwPt_V_writ_reg_2039 <= pfout_5_hwPt_V_writ_fu_938_p3;
                tmp_8_reg_2056 <= tmp_8_fu_950_p2;
                tmp_9_reg_2069 <= tmp_9_fu_962_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (tmp_8_reg_2056 = ap_const_lv1_0))) then
                op2_assign_8_reg_2201 <= op2_assign_8_fu_1127_p2;
                r_V_8_reg_2196 <= r_V_8_fu_1808_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (tmp_9_reg_2069 = ap_const_lv1_0))) then
                op2_assign_9_reg_2211 <= op2_assign_9_fu_1150_p2;
                r_V_9_reg_2206 <= r_V_9_fu_1814_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_1_reg_1843 = ap_const_lv1_0))) then
                r_V_1_reg_1871 <= r_V_1_fu_1766_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_2_reg_1876 = ap_const_lv1_0))) then
                r_V_2_reg_1926 <= r_V_2_fu_1772_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_3_reg_1889 = ap_const_lv1_0))) then
                r_V_3_reg_1931 <= r_V_3_fu_1778_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (tmp_4_reg_1936 = ap_const_lv1_0))) then
                r_V_4_reg_1986 <= r_V_4_fu_1784_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (tmp_5_reg_1949 = ap_const_lv1_0))) then
                r_V_5_reg_1991 <= r_V_5_fu_1790_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (tmp_6_reg_1996 = ap_const_lv1_0))) then
                r_V_6_reg_2046 <= r_V_6_fu_1796_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (tmp_7_reg_2009 = ap_const_lv1_0))) then
                r_V_7_reg_2051 <= r_V_7_fu_1802_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_s_reg_1830 = ap_const_lv1_0))) then
                r_V_reg_1866 <= r_V_fu_1760_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_reset_idle_pp0, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if (((ap_reset_idle_pp0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= pfout_0_hwPt_V_writ_reg_1912;
    ap_return_1 <= pfout_1_hwPt_V_writ_reg_1919;
    ap_return_10 <= calo_0_hwEta_V_read_1_fu_1255_p3;
    ap_return_11 <= calo_1_hwEta_V_read_1_fu_1283_p3;
    ap_return_12 <= calo_2_hwEta_V_read_1_fu_1311_p3;
    ap_return_13 <= calo_3_hwEta_V_read_1_fu_1339_p3;
    ap_return_14 <= calo_4_hwEta_V_read_1_fu_1367_p3;
    ap_return_15 <= calo_5_hwEta_V_read_1_fu_1395_p3;
    ap_return_16 <= calo_6_hwEta_V_read_1_fu_1423_p3;
    ap_return_17 <= calo_7_hwEta_V_read_1_fu_1451_p3;
    ap_return_18 <= calo_8_hwEta_V_read_1_fu_1479_p3;
    ap_return_19 <= calo_9_hwEta_V_read_1_fu_1507_p3;
    ap_return_2 <= pfout_2_hwPt_V_writ_reg_1972;
    ap_return_20 <= calo_0_hwPhi_V_read_1_fu_1262_p3;
    ap_return_21 <= calo_1_hwPhi_V_read_1_fu_1290_p3;
    ap_return_22 <= calo_2_hwPhi_V_read_1_fu_1318_p3;
    ap_return_23 <= calo_3_hwPhi_V_read_1_fu_1346_p3;
    ap_return_24 <= calo_4_hwPhi_V_read_1_fu_1374_p3;
    ap_return_25 <= calo_5_hwPhi_V_read_1_fu_1402_p3;
    ap_return_26 <= calo_6_hwPhi_V_read_1_fu_1430_p3;
    ap_return_27 <= calo_7_hwPhi_V_read_1_fu_1458_p3;
    ap_return_28 <= calo_8_hwPhi_V_read_1_fu_1486_p3;
    ap_return_29 <= calo_9_hwPhi_V_read_1_fu_1514_p3;
    ap_return_3 <= pfout_3_hwPt_V_writ_reg_1979;
    ap_return_30 <= pfout_0_hwId_V_writ_fu_1274_p1;
    ap_return_31 <= pfout_1_hwId_V_writ_fu_1302_p1;
    ap_return_32 <= pfout_2_hwId_V_writ_fu_1330_p1;
    ap_return_33 <= pfout_3_hwId_V_writ_fu_1358_p1;
    ap_return_34 <= pfout_4_hwId_V_writ_fu_1386_p1;
    ap_return_35 <= pfout_5_hwId_V_writ_fu_1414_p1;
    ap_return_36 <= pfout_6_hwId_V_writ_fu_1442_p1;
    ap_return_37 <= pfout_7_hwId_V_writ_fu_1470_p1;
    ap_return_38 <= pfout_8_hwId_V_writ_fu_1498_p1;
    ap_return_39 <= pfout_9_hwId_V_writ_fu_1526_p1;
    ap_return_4 <= pfout_4_hwPt_V_writ_reg_2032;
    ap_return_5 <= pfout_5_hwPt_V_writ_reg_2039;
    ap_return_6 <= pfout_6_hwPt_V_writ_reg_2182;
    ap_return_7 <= pfout_7_hwPt_V_writ_reg_2189;
    ap_return_8 <= pfout_8_hwPt_V_writ_reg_2216;
    ap_return_9 <= pfout_9_hwPt_V_writ_reg_2223;
    calo_0_hwEta_V_read_1_fu_1255_p3 <= 
        ap_const_lv10_0 when (tmp_20_fu_1250_p2(0) = '1') else 
        calo_0_hwEta_V_read_5_reg_2177;
    calo_0_hwPhi_V_read_1_fu_1262_p3 <= 
        ap_const_lv10_0 when (tmp_20_fu_1250_p2(0) = '1') else 
        calo_0_hwPhi_V_read_5_reg_2127;
    calo_1_hwEta_V_read_1_fu_1283_p3 <= 
        ap_const_lv10_0 when (tmp_33_1_fu_1278_p2(0) = '1') else 
        calo_1_hwEta_V_read_5_reg_2172;
    calo_1_hwPhi_V_read_1_fu_1290_p3 <= 
        ap_const_lv10_0 when (tmp_33_1_fu_1278_p2(0) = '1') else 
        calo_1_hwPhi_V_read_5_reg_2122;
    calo_2_hwEta_V_read_1_fu_1311_p3 <= 
        ap_const_lv10_0 when (tmp_33_2_fu_1306_p2(0) = '1') else 
        calo_2_hwEta_V_read_5_reg_2167;
    calo_2_hwPhi_V_read_1_fu_1318_p3 <= 
        ap_const_lv10_0 when (tmp_33_2_fu_1306_p2(0) = '1') else 
        calo_2_hwPhi_V_read_5_reg_2117;
    calo_3_hwEta_V_read_1_fu_1339_p3 <= 
        ap_const_lv10_0 when (tmp_33_3_fu_1334_p2(0) = '1') else 
        calo_3_hwEta_V_read_5_reg_2162;
    calo_3_hwPhi_V_read_1_fu_1346_p3 <= 
        ap_const_lv10_0 when (tmp_33_3_fu_1334_p2(0) = '1') else 
        calo_3_hwPhi_V_read_5_reg_2112;
    calo_4_hwEta_V_read_1_fu_1367_p3 <= 
        ap_const_lv10_0 when (tmp_33_4_fu_1362_p2(0) = '1') else 
        calo_4_hwEta_V_read_5_reg_2157;
    calo_4_hwPhi_V_read_1_fu_1374_p3 <= 
        ap_const_lv10_0 when (tmp_33_4_fu_1362_p2(0) = '1') else 
        calo_4_hwPhi_V_read_5_reg_2107;
    calo_5_hwEta_V_read_1_fu_1395_p3 <= 
        ap_const_lv10_0 when (tmp_33_5_fu_1390_p2(0) = '1') else 
        calo_5_hwEta_V_read_5_reg_2152;
    calo_5_hwPhi_V_read_1_fu_1402_p3 <= 
        ap_const_lv10_0 when (tmp_33_5_fu_1390_p2(0) = '1') else 
        calo_5_hwPhi_V_read_5_reg_2102;
    calo_6_hwEta_V_read_1_fu_1423_p3 <= 
        ap_const_lv10_0 when (tmp_33_6_fu_1418_p2(0) = '1') else 
        calo_6_hwEta_V_read_5_reg_2147;
    calo_6_hwPhi_V_read_1_fu_1430_p3 <= 
        ap_const_lv10_0 when (tmp_33_6_fu_1418_p2(0) = '1') else 
        calo_6_hwPhi_V_read_5_reg_2097;
    calo_7_hwEta_V_read_1_fu_1451_p3 <= 
        ap_const_lv10_0 when (tmp_33_7_fu_1446_p2(0) = '1') else 
        calo_7_hwEta_V_read_5_reg_2142;
    calo_7_hwPhi_V_read_1_fu_1458_p3 <= 
        ap_const_lv10_0 when (tmp_33_7_fu_1446_p2(0) = '1') else 
        calo_7_hwPhi_V_read_5_reg_2092;
    calo_8_hwEta_V_read_1_fu_1479_p3 <= 
        ap_const_lv10_0 when (tmp_33_8_fu_1474_p2(0) = '1') else 
        calo_8_hwEta_V_read_5_reg_2137;
    calo_8_hwPhi_V_read_1_fu_1486_p3 <= 
        ap_const_lv10_0 when (tmp_33_8_fu_1474_p2(0) = '1') else 
        calo_8_hwPhi_V_read_5_reg_2087;
    calo_9_hwEta_V_read_1_fu_1507_p3 <= 
        ap_const_lv10_0 when (tmp_33_9_fu_1502_p2(0) = '1') else 
        calo_9_hwEta_V_read_5_reg_2132;
    calo_9_hwPhi_V_read_1_fu_1514_p3 <= 
        ap_const_lv10_0 when (tmp_33_9_fu_1502_p2(0) = '1') else 
        calo_9_hwPhi_V_read_5_reg_2082;
    calopt_V_2_1_fu_440_p2 <= std_logic_vector(unsigned(calo_1_hwPt_V_read) - unsigned(sumtk_1_V_read));
    calopt_V_2_2_fu_458_p2 <= std_logic_vector(unsigned(ap_port_reg_calo_2_hwPt_V_read) - unsigned(ap_port_reg_sumtk_2_V_read));
    calopt_V_2_3_fu_470_p2 <= std_logic_vector(unsigned(ap_port_reg_calo_3_hwPt_V_read) - unsigned(ap_port_reg_sumtk_3_V_read));
    calopt_V_2_4_fu_624_p2 <= std_logic_vector(unsigned(ap_port_reg_calo_4_hwPt_V_read) - unsigned(ap_port_reg_sumtk_4_V_read));
    calopt_V_2_5_fu_636_p2 <= std_logic_vector(unsigned(ap_port_reg_calo_5_hwPt_V_read) - unsigned(ap_port_reg_sumtk_5_V_read));
    calopt_V_2_6_fu_790_p2 <= std_logic_vector(unsigned(ap_port_reg_calo_6_hwPt_V_read) - unsigned(ap_port_reg_sumtk_6_V_read));
    calopt_V_2_7_fu_802_p2 <= std_logic_vector(unsigned(ap_port_reg_calo_7_hwPt_V_read) - unsigned(ap_port_reg_sumtk_7_V_read));
    calopt_V_2_8_fu_956_p2 <= std_logic_vector(unsigned(ap_port_reg_calo_8_hwPt_V_read) - unsigned(ap_port_reg_sumtk_8_V_read));
    calopt_V_2_9_fu_968_p2 <= std_logic_vector(unsigned(ap_port_reg_calo_9_hwPt_V_read) - unsigned(ap_port_reg_sumtk_9_V_read));
    calopt_V_2_fu_428_p2 <= std_logic_vector(unsigned(calo_0_hwPt_V_read) - unsigned(sumtk_0_V_read));
    lhs_V_1_fu_449_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(calopt_V_2_1_reg_1849),32));
    lhs_V_2_fu_612_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(calopt_V_2_2_reg_1882),32));
    lhs_V_3_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(calopt_V_2_3_reg_1895),32));
    lhs_V_4_fu_778_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(calopt_V_2_4_reg_1942),32));
    lhs_V_5_fu_781_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(calopt_V_2_5_reg_1955),32));
    lhs_V_6_fu_944_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(calopt_V_2_6_reg_2002),32));
    lhs_V_7_fu_947_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(calopt_V_2_7_reg_2015),32));
    lhs_V_8_fu_1110_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(calopt_V_2_8_reg_2062),32));
    lhs_V_9_fu_1133_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(calopt_V_2_9_reg_2075),32));
    lhs_V_fu_446_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(calopt_V_2_reg_1836),32));
    op2_assign_1_fu_566_p2 <= std_logic_vector(unsigned(ap_port_reg_sumtkerr2_1_read) + unsigned(tmp_31_1_fu_562_p1));
    op2_assign_2_fu_664_p2 <= std_logic_vector(unsigned(ap_port_reg_sumtkerr2_2_read) + unsigned(tmp_31_2_fu_660_p1));
    op2_assign_3_fu_732_p2 <= std_logic_vector(unsigned(ap_port_reg_sumtkerr2_3_read) + unsigned(tmp_31_3_fu_728_p1));
    op2_assign_4_fu_830_p2 <= std_logic_vector(unsigned(ap_port_reg_sumtkerr2_4_read) + unsigned(tmp_31_4_fu_826_p1));
    op2_assign_5_fu_898_p2 <= std_logic_vector(unsigned(ap_port_reg_sumtkerr2_5_read) + unsigned(tmp_31_5_fu_894_p1));
    op2_assign_6_fu_996_p2 <= std_logic_vector(unsigned(ap_port_reg_sumtkerr2_6_read) + unsigned(tmp_31_6_fu_992_p1));
    op2_assign_7_fu_1064_p2 <= std_logic_vector(unsigned(ap_port_reg_sumtkerr2_7_read) + unsigned(tmp_31_7_fu_1060_p1));
    op2_assign_8_fu_1127_p2 <= std_logic_vector(unsigned(ap_port_reg_sumtkerr2_8_read) + unsigned(tmp_31_8_fu_1123_p1));
    op2_assign_9_fu_1150_p2 <= std_logic_vector(unsigned(ap_port_reg_sumtkerr2_9_read) + unsigned(tmp_31_9_fu_1146_p1));
    op2_assign_fu_498_p2 <= std_logic_vector(unsigned(ap_port_reg_sumtkerr2_0_read) + unsigned(tmp_18_fu_494_p1));
    pfout_0_hwId_V_writ_fu_1274_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_fu_1269_p2),3));
    pfout_0_hwPt_V_writ_fu_538_p3 <= 
        calo_0_hwPt_V_read_4_reg_1825 when (tmp_s_reg_1830(0) = '1') else 
        sel_tmp3_cast_fu_534_p1;
    pfout_1_hwId_V_writ_fu_1302_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_1_fu_1297_p2),3));
    pfout_1_hwPt_V_writ_fu_606_p3 <= 
        calo_1_hwPt_V_read_4_reg_1820 when (tmp_1_reg_1843(0) = '1') else 
        sel_tmp8_cast_fu_602_p1;
    pfout_2_hwId_V_writ_fu_1330_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_2_fu_1325_p2),3));
    pfout_2_hwPt_V_writ_fu_704_p3 <= 
        calo_2_hwPt_V_read_4_reg_1861 when (tmp_2_reg_1876(0) = '1') else 
        sel_tmp13_cast_fu_700_p1;
    pfout_3_hwId_V_writ_fu_1358_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_3_fu_1353_p2),3));
    pfout_3_hwPt_V_writ_fu_772_p3 <= 
        calo_3_hwPt_V_read_4_reg_1856 when (tmp_3_reg_1889(0) = '1') else 
        sel_tmp18_cast_fu_768_p1;
    pfout_4_hwId_V_writ_fu_1386_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_4_fu_1381_p2),3));
    pfout_4_hwPt_V_writ_fu_870_p3 <= 
        calo_4_hwPt_V_read_4_reg_1907 when (tmp_4_reg_1936(0) = '1') else 
        sel_tmp23_cast_fu_866_p1;
    pfout_5_hwId_V_writ_fu_1414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_5_fu_1409_p2),3));
    pfout_5_hwPt_V_writ_fu_938_p3 <= 
        calo_5_hwPt_V_read_4_reg_1902 when (tmp_5_reg_1949(0) = '1') else 
        sel_tmp28_cast_fu_934_p1;
    pfout_6_hwId_V_writ_fu_1442_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_6_fu_1437_p2),3));
    pfout_6_hwPt_V_writ_fu_1036_p3 <= 
        calo_6_hwPt_V_read_4_reg_1967 when (tmp_6_reg_1996(0) = '1') else 
        sel_tmp33_cast_fu_1032_p1;
    pfout_7_hwId_V_writ_fu_1470_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_7_fu_1465_p2),3));
    pfout_7_hwPt_V_writ_fu_1104_p3 <= 
        calo_7_hwPt_V_read_4_reg_1962 when (tmp_7_reg_2009(0) = '1') else 
        sel_tmp38_cast_fu_1100_p1;
    pfout_8_hwId_V_writ_fu_1498_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_8_fu_1493_p2),3));
    pfout_8_hwPt_V_writ_fu_1197_p3 <= 
        calo_8_hwPt_V_read_4_reg_2027 when (tmp_8_reg_2056(0) = '1') else 
        sel_tmp43_cast_fu_1193_p1;
    pfout_9_hwId_V_writ_fu_1526_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_9_fu_1521_p2),3));
    pfout_9_hwPt_V_writ_fu_1244_p3 <= 
        calo_9_hwPt_V_read_4_reg_2022 when (tmp_9_reg_2069(0) = '1') else 
        sel_tmp48_cast_fu_1240_p1;
    r_V_1_fu_1766_p0 <= lhs_V_1_fu_449_p1(16 - 1 downto 0);
    r_V_1_fu_1766_p1 <= lhs_V_1_fu_449_p1(16 - 1 downto 0);
    r_V_2_fu_1772_p0 <= lhs_V_2_fu_612_p1(16 - 1 downto 0);
    r_V_2_fu_1772_p1 <= lhs_V_2_fu_612_p1(16 - 1 downto 0);
    r_V_3_fu_1778_p0 <= lhs_V_3_fu_615_p1(16 - 1 downto 0);
    r_V_3_fu_1778_p1 <= lhs_V_3_fu_615_p1(16 - 1 downto 0);
    r_V_4_fu_1784_p0 <= lhs_V_4_fu_778_p1(16 - 1 downto 0);
    r_V_4_fu_1784_p1 <= lhs_V_4_fu_778_p1(16 - 1 downto 0);
    r_V_5_fu_1790_p0 <= lhs_V_5_fu_781_p1(16 - 1 downto 0);
    r_V_5_fu_1790_p1 <= lhs_V_5_fu_781_p1(16 - 1 downto 0);
    r_V_6_fu_1796_p0 <= lhs_V_6_fu_944_p1(16 - 1 downto 0);
    r_V_6_fu_1796_p1 <= lhs_V_6_fu_944_p1(16 - 1 downto 0);
    r_V_7_fu_1802_p0 <= lhs_V_7_fu_947_p1(16 - 1 downto 0);
    r_V_7_fu_1802_p1 <= lhs_V_7_fu_947_p1(16 - 1 downto 0);
    r_V_8_fu_1808_p0 <= lhs_V_8_fu_1110_p1(16 - 1 downto 0);
    r_V_8_fu_1808_p1 <= lhs_V_8_fu_1110_p1(16 - 1 downto 0);
    r_V_9_fu_1814_p0 <= lhs_V_9_fu_1133_p1(16 - 1 downto 0);
    r_V_9_fu_1814_p1 <= lhs_V_9_fu_1133_p1(16 - 1 downto 0);
    r_V_fu_1760_p0 <= lhs_V_fu_446_p1(16 - 1 downto 0);
    r_V_fu_1760_p1 <= lhs_V_fu_446_p1(16 - 1 downto 0);
    sel_tmp10_fu_675_p2 <= (tmp_2_reg_1876 xor ap_const_lv1_1);
    sel_tmp12_fu_686_p2 <= (tmp_30_2_fu_645_p2 and tmp52_fu_680_p2);
    sel_tmp13_cast_fu_700_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sel_tmp13_fu_692_p3),16));
    sel_tmp13_fu_692_p3 <= 
        tmp_504_fu_642_p1 when (sel_tmp12_fu_686_p2(0) = '1') else 
        ap_const_lv15_0;
    sel_tmp15_fu_743_p2 <= (tmp_3_reg_1889 xor ap_const_lv1_1);
    sel_tmp17_fu_754_p2 <= (tmp_30_3_fu_713_p2 and tmp53_fu_748_p2);
    sel_tmp18_cast_fu_768_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sel_tmp18_fu_760_p3),16));
    sel_tmp18_fu_760_p3 <= 
        tmp_505_fu_710_p1 when (sel_tmp17_fu_754_p2(0) = '1') else 
        ap_const_lv15_0;
    sel_tmp20_fu_841_p2 <= (tmp_4_reg_1936 xor ap_const_lv1_1);
    sel_tmp22_fu_852_p2 <= (tmp_30_4_fu_811_p2 and tmp54_fu_846_p2);
    sel_tmp23_cast_fu_866_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sel_tmp23_fu_858_p3),16));
    sel_tmp23_fu_858_p3 <= 
        tmp_506_fu_808_p1 when (sel_tmp22_fu_852_p2(0) = '1') else 
        ap_const_lv15_0;
    sel_tmp25_fu_909_p2 <= (tmp_5_reg_1949 xor ap_const_lv1_1);
    sel_tmp27_fu_920_p2 <= (tmp_30_5_fu_879_p2 and tmp55_fu_914_p2);
    sel_tmp28_cast_fu_934_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sel_tmp28_fu_926_p3),16));
    sel_tmp28_fu_926_p3 <= 
        tmp_507_fu_876_p1 when (sel_tmp27_fu_920_p2(0) = '1') else 
        ap_const_lv15_0;
    sel_tmp2_fu_520_p2 <= (tmp_16_fu_479_p2 and tmp50_fu_514_p2);
    sel_tmp30_fu_1007_p2 <= (tmp_6_reg_1996 xor ap_const_lv1_1);
    sel_tmp32_fu_1018_p2 <= (tmp_30_6_fu_977_p2 and tmp56_fu_1012_p2);
    sel_tmp33_cast_fu_1032_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sel_tmp33_fu_1024_p3),16));
    sel_tmp33_fu_1024_p3 <= 
        tmp_508_fu_974_p1 when (sel_tmp32_fu_1018_p2(0) = '1') else 
        ap_const_lv15_0;
    sel_tmp35_fu_1075_p2 <= (tmp_7_reg_2009 xor ap_const_lv1_1);
    sel_tmp37_fu_1086_p2 <= (tmp_30_7_fu_1045_p2 and tmp57_fu_1080_p2);
    sel_tmp38_cast_fu_1100_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sel_tmp38_fu_1092_p3),16));
    sel_tmp38_fu_1092_p3 <= 
        tmp_509_fu_1042_p1 when (sel_tmp37_fu_1086_p2(0) = '1') else 
        ap_const_lv15_0;
    sel_tmp3_cast_fu_534_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sel_tmp3_fu_526_p3),16));
    sel_tmp3_fu_526_p3 <= 
        tmp_fu_476_p1 when (sel_tmp2_fu_520_p2(0) = '1') else 
        ap_const_lv15_0;
    sel_tmp40_fu_1168_p2 <= (tmp_8_reg_2056 xor ap_const_lv1_1);
    sel_tmp42_fu_1179_p2 <= (tmp_30_8_fu_1159_p2 and tmp58_fu_1173_p2);
    sel_tmp43_cast_fu_1193_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sel_tmp43_fu_1185_p3),16));
    sel_tmp43_fu_1185_p3 <= 
        tmp_510_fu_1156_p1 when (sel_tmp42_fu_1179_p2(0) = '1') else 
        ap_const_lv15_0;
    sel_tmp45_fu_1215_p2 <= (tmp_9_reg_2069 xor ap_const_lv1_1);
    sel_tmp47_fu_1226_p2 <= (tmp_30_9_fu_1206_p2 and tmp59_fu_1220_p2);
    sel_tmp48_cast_fu_1240_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sel_tmp48_fu_1232_p3),16));
    sel_tmp48_fu_1232_p3 <= 
        tmp_511_fu_1203_p1 when (sel_tmp47_fu_1226_p2(0) = '1') else 
        ap_const_lv15_0;
    sel_tmp5_fu_577_p2 <= (tmp_1_reg_1843 xor ap_const_lv1_1);
    sel_tmp7_fu_588_p2 <= (tmp_30_1_fu_547_p2 and tmp51_fu_582_p2);
    sel_tmp8_cast_fu_602_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sel_tmp8_fu_594_p3),16));
    sel_tmp8_fu_594_p3 <= 
        tmp_503_fu_544_p1 when (sel_tmp7_fu_588_p2(0) = '1') else 
        ap_const_lv15_0;
    sel_tmp_fu_509_p2 <= (tmp_s_reg_1830 xor ap_const_lv1_1);
    tmp50_fu_514_p2 <= (tmp_19_fu_504_p2 and sel_tmp_fu_509_p2);
    tmp51_fu_582_p2 <= (tmp_32_1_fu_572_p2 and sel_tmp5_fu_577_p2);
    tmp52_fu_680_p2 <= (tmp_32_2_fu_670_p2 and sel_tmp10_fu_675_p2);
    tmp53_fu_748_p2 <= (tmp_32_3_fu_738_p2 and sel_tmp15_fu_743_p2);
    tmp54_fu_846_p2 <= (tmp_32_4_fu_836_p2 and sel_tmp20_fu_841_p2);
    tmp55_fu_914_p2 <= (tmp_32_5_fu_904_p2 and sel_tmp25_fu_909_p2);
    tmp56_fu_1012_p2 <= (tmp_32_6_fu_1002_p2 and sel_tmp30_fu_1007_p2);
    tmp57_fu_1080_p2 <= (tmp_32_7_fu_1070_p2 and sel_tmp35_fu_1075_p2);
    tmp58_fu_1173_p2 <= (tmp_32_8_fu_1164_p2 and sel_tmp40_fu_1168_p2);
    tmp59_fu_1220_p2 <= (tmp_32_9_fu_1211_p2 and sel_tmp45_fu_1215_p2);
    tmp_16_fu_479_p2 <= "1" when (signed(calopt_V_2_reg_1836) > signed(ap_const_lv16_0)) else "0";
    tmp_17_fu_484_p4 <= ap_port_reg_sumtkerr2_0_read(31 downto 1);
        tmp_18_fu_494_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_17_fu_484_p4),32));

    tmp_19_fu_504_p2 <= "1" when (signed(r_V_reg_1866) > signed(op2_assign_fu_498_p2)) else "0";
    tmp_1_fu_434_p2 <= "1" when (sumtk_1_V_read = ap_const_lv16_0) else "0";
    tmp_20_fu_1250_p2 <= "1" when (pfout_0_hwPt_V_writ_reg_1912 = ap_const_lv16_0) else "0";
    tmp_21_fu_1269_p2 <= "0" when (pfout_0_hwPt_V_writ_reg_1912 = ap_const_lv16_0) else "1";
    tmp_22_fu_552_p4 <= ap_port_reg_sumtkerr2_1_read(31 downto 1);
    tmp_23_fu_650_p4 <= ap_port_reg_sumtkerr2_2_read(31 downto 1);
    tmp_24_fu_718_p4 <= ap_port_reg_sumtkerr2_3_read(31 downto 1);
    tmp_25_fu_816_p4 <= ap_port_reg_sumtkerr2_4_read(31 downto 1);
    tmp_26_fu_884_p4 <= ap_port_reg_sumtkerr2_5_read(31 downto 1);
    tmp_27_fu_982_p4 <= ap_port_reg_sumtkerr2_6_read(31 downto 1);
    tmp_28_fu_1050_p4 <= ap_port_reg_sumtkerr2_7_read(31 downto 1);
    tmp_29_fu_1113_p4 <= ap_port_reg_sumtkerr2_8_read(31 downto 1);
    tmp_2_fu_452_p2 <= "1" when (ap_port_reg_sumtk_2_V_read = ap_const_lv16_0) else "0";
    tmp_30_1_fu_547_p2 <= "1" when (signed(calopt_V_2_1_reg_1849) > signed(ap_const_lv16_0)) else "0";
    tmp_30_2_fu_645_p2 <= "1" when (signed(calopt_V_2_2_reg_1882) > signed(ap_const_lv16_0)) else "0";
    tmp_30_3_fu_713_p2 <= "1" when (signed(calopt_V_2_3_reg_1895) > signed(ap_const_lv16_0)) else "0";
    tmp_30_4_fu_811_p2 <= "1" when (signed(calopt_V_2_4_reg_1942) > signed(ap_const_lv16_0)) else "0";
    tmp_30_5_fu_879_p2 <= "1" when (signed(calopt_V_2_5_reg_1955) > signed(ap_const_lv16_0)) else "0";
    tmp_30_6_fu_977_p2 <= "1" when (signed(calopt_V_2_6_reg_2002) > signed(ap_const_lv16_0)) else "0";
    tmp_30_7_fu_1045_p2 <= "1" when (signed(calopt_V_2_7_reg_2015) > signed(ap_const_lv16_0)) else "0";
    tmp_30_8_fu_1159_p2 <= "1" when (signed(calopt_V_2_8_reg_2062) > signed(ap_const_lv16_0)) else "0";
    tmp_30_9_fu_1206_p2 <= "1" when (signed(calopt_V_2_9_reg_2075) > signed(ap_const_lv16_0)) else "0";
    tmp_30_fu_1136_p4 <= ap_port_reg_sumtkerr2_9_read(31 downto 1);
        tmp_31_1_fu_562_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_22_fu_552_p4),32));

        tmp_31_2_fu_660_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_23_fu_650_p4),32));

        tmp_31_3_fu_728_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_24_fu_718_p4),32));

        tmp_31_4_fu_826_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_25_fu_816_p4),32));

        tmp_31_5_fu_894_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_26_fu_884_p4),32));

        tmp_31_6_fu_992_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_27_fu_982_p4),32));

        tmp_31_7_fu_1060_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_28_fu_1050_p4),32));

        tmp_31_8_fu_1123_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_29_fu_1113_p4),32));

        tmp_31_9_fu_1146_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_30_fu_1136_p4),32));

    tmp_32_1_fu_572_p2 <= "1" when (signed(r_V_1_reg_1871) > signed(op2_assign_1_fu_566_p2)) else "0";
    tmp_32_2_fu_670_p2 <= "1" when (signed(r_V_2_reg_1926) > signed(op2_assign_2_fu_664_p2)) else "0";
    tmp_32_3_fu_738_p2 <= "1" when (signed(r_V_3_reg_1931) > signed(op2_assign_3_fu_732_p2)) else "0";
    tmp_32_4_fu_836_p2 <= "1" when (signed(r_V_4_reg_1986) > signed(op2_assign_4_fu_830_p2)) else "0";
    tmp_32_5_fu_904_p2 <= "1" when (signed(r_V_5_reg_1991) > signed(op2_assign_5_fu_898_p2)) else "0";
    tmp_32_6_fu_1002_p2 <= "1" when (signed(r_V_6_reg_2046) > signed(op2_assign_6_fu_996_p2)) else "0";
    tmp_32_7_fu_1070_p2 <= "1" when (signed(r_V_7_reg_2051) > signed(op2_assign_7_fu_1064_p2)) else "0";
    tmp_32_8_fu_1164_p2 <= "1" when (signed(r_V_8_reg_2196) > signed(op2_assign_8_reg_2201)) else "0";
    tmp_32_9_fu_1211_p2 <= "1" when (signed(r_V_9_reg_2206) > signed(op2_assign_9_reg_2211)) else "0";
    tmp_33_1_fu_1278_p2 <= "1" when (pfout_1_hwPt_V_writ_reg_1919 = ap_const_lv16_0) else "0";
    tmp_33_2_fu_1306_p2 <= "1" when (pfout_2_hwPt_V_writ_reg_1972 = ap_const_lv16_0) else "0";
    tmp_33_3_fu_1334_p2 <= "1" when (pfout_3_hwPt_V_writ_reg_1979 = ap_const_lv16_0) else "0";
    tmp_33_4_fu_1362_p2 <= "1" when (pfout_4_hwPt_V_writ_reg_2032 = ap_const_lv16_0) else "0";
    tmp_33_5_fu_1390_p2 <= "1" when (pfout_5_hwPt_V_writ_reg_2039 = ap_const_lv16_0) else "0";
    tmp_33_6_fu_1418_p2 <= "1" when (pfout_6_hwPt_V_writ_reg_2182 = ap_const_lv16_0) else "0";
    tmp_33_7_fu_1446_p2 <= "1" when (pfout_7_hwPt_V_writ_reg_2189 = ap_const_lv16_0) else "0";
    tmp_33_8_fu_1474_p2 <= "1" when (pfout_8_hwPt_V_writ_reg_2216 = ap_const_lv16_0) else "0";
    tmp_33_9_fu_1502_p2 <= "1" when (pfout_9_hwPt_V_writ_reg_2223 = ap_const_lv16_0) else "0";
    tmp_34_1_fu_1297_p2 <= "0" when (pfout_1_hwPt_V_writ_reg_1919 = ap_const_lv16_0) else "1";
    tmp_34_2_fu_1325_p2 <= "0" when (pfout_2_hwPt_V_writ_reg_1972 = ap_const_lv16_0) else "1";
    tmp_34_3_fu_1353_p2 <= "0" when (pfout_3_hwPt_V_writ_reg_1979 = ap_const_lv16_0) else "1";
    tmp_34_4_fu_1381_p2 <= "0" when (pfout_4_hwPt_V_writ_reg_2032 = ap_const_lv16_0) else "1";
    tmp_34_5_fu_1409_p2 <= "0" when (pfout_5_hwPt_V_writ_reg_2039 = ap_const_lv16_0) else "1";
    tmp_34_6_fu_1437_p2 <= "0" when (pfout_6_hwPt_V_writ_reg_2182 = ap_const_lv16_0) else "1";
    tmp_34_7_fu_1465_p2 <= "0" when (pfout_7_hwPt_V_writ_reg_2189 = ap_const_lv16_0) else "1";
    tmp_34_8_fu_1493_p2 <= "0" when (pfout_8_hwPt_V_writ_reg_2216 = ap_const_lv16_0) else "1";
    tmp_34_9_fu_1521_p2 <= "0" when (pfout_9_hwPt_V_writ_reg_2223 = ap_const_lv16_0) else "1";
    tmp_3_fu_464_p2 <= "1" when (ap_port_reg_sumtk_3_V_read = ap_const_lv16_0) else "0";
    tmp_4_fu_618_p2 <= "1" when (ap_port_reg_sumtk_4_V_read = ap_const_lv16_0) else "0";
    tmp_503_fu_544_p1 <= calopt_V_2_1_reg_1849(15 - 1 downto 0);
    tmp_504_fu_642_p1 <= calopt_V_2_2_reg_1882(15 - 1 downto 0);
    tmp_505_fu_710_p1 <= calopt_V_2_3_reg_1895(15 - 1 downto 0);
    tmp_506_fu_808_p1 <= calopt_V_2_4_reg_1942(15 - 1 downto 0);
    tmp_507_fu_876_p1 <= calopt_V_2_5_reg_1955(15 - 1 downto 0);
    tmp_508_fu_974_p1 <= calopt_V_2_6_reg_2002(15 - 1 downto 0);
    tmp_509_fu_1042_p1 <= calopt_V_2_7_reg_2015(15 - 1 downto 0);
    tmp_510_fu_1156_p1 <= calopt_V_2_8_reg_2062(15 - 1 downto 0);
    tmp_511_fu_1203_p1 <= calopt_V_2_9_reg_2075(15 - 1 downto 0);
    tmp_5_fu_630_p2 <= "1" when (ap_port_reg_sumtk_5_V_read = ap_const_lv16_0) else "0";
    tmp_6_fu_784_p2 <= "1" when (ap_port_reg_sumtk_6_V_read = ap_const_lv16_0) else "0";
    tmp_7_fu_796_p2 <= "1" when (ap_port_reg_sumtk_7_V_read = ap_const_lv16_0) else "0";
    tmp_8_fu_950_p2 <= "1" when (ap_port_reg_sumtk_8_V_read = ap_const_lv16_0) else "0";
    tmp_9_fu_962_p2 <= "1" when (ap_port_reg_sumtk_9_V_read = ap_const_lv16_0) else "0";
    tmp_fu_476_p1 <= calopt_V_2_reg_1836(15 - 1 downto 0);
    tmp_s_fu_422_p2 <= "1" when (sumtk_0_V_read = ap_const_lv16_0) else "0";
end behav;
