-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity tk2calo_caloalgo is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    calo_0_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    calo_1_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    calo_2_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    calo_3_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    calo_4_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    calo_5_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    calo_6_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    calo_7_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    calo_8_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    calo_9_hwPt_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    calo_0_hwEta_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_1_hwEta_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_2_hwEta_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_3_hwEta_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_4_hwEta_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_5_hwEta_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_6_hwEta_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_7_hwEta_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_8_hwEta_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_9_hwEta_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_0_hwPhi_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_1_hwPhi_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_2_hwPhi_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_3_hwPhi_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_4_hwPhi_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_5_hwPhi_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_6_hwPhi_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_7_hwPhi_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_8_hwPhi_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    calo_9_hwPhi_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    sumtk_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    sumtk_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    sumtk_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    sumtk_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    sumtk_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    sumtk_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    sumtk_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    sumtk_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    sumtk_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    sumtk_9_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    sumtkerr2_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    sumtkerr2_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    sumtkerr2_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
    sumtkerr2_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
    sumtkerr2_4_read : IN STD_LOGIC_VECTOR (31 downto 0);
    sumtkerr2_5_read : IN STD_LOGIC_VECTOR (31 downto 0);
    sumtkerr2_6_read : IN STD_LOGIC_VECTOR (31 downto 0);
    sumtkerr2_7_read : IN STD_LOGIC_VECTOR (31 downto 0);
    sumtkerr2_8_read : IN STD_LOGIC_VECTOR (31 downto 0);
    sumtkerr2_9_read : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_15 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_16 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_17 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_18 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_19 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_20 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_21 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_22 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_23 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_24 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_25 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_26 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_27 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_28 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_29 : OUT STD_LOGIC_VECTOR (9 downto 0);
    ap_return_30 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_31 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_32 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_33 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_34 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_35 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_36 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_37 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_38 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_39 : OUT STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of tk2calo_caloalgo is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal calo_1_hwPt_V_read_4_reg_1772 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal calo_0_hwPt_V_read_4_reg_1777 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1782 : STD_LOGIC_VECTOR (0 downto 0);
    signal calopt_V_2_fu_428_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal calopt_V_2_reg_1788 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_fu_434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1795 : STD_LOGIC_VECTOR (0 downto 0);
    signal calopt_V_2_1_fu_440_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal calopt_V_2_1_reg_1801 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal calo_3_hwPt_V_read_4_reg_1818 : STD_LOGIC_VECTOR (15 downto 0);
    signal calo_2_hwPt_V_read_4_reg_1823 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_fu_446_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_V_1_fu_469_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1850 : STD_LOGIC_VECTOR (0 downto 0);
    signal calopt_V_2_2_fu_498_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal calopt_V_2_2_reg_1856 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1863 : STD_LOGIC_VECTOR (0 downto 0);
    signal calopt_V_2_3_fu_510_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal calopt_V_2_3_reg_1869 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal calo_5_hwPt_V_read_4_reg_1886 : STD_LOGIC_VECTOR (15 downto 0);
    signal calo_4_hwPt_V_read_4_reg_1891 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1712_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_reg_1896 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_463_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_reg_1901 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1718_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_1_reg_1906 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_486_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_1_reg_1911 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_V_2_fu_516_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_V_3_fu_539_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1938 : STD_LOGIC_VECTOR (0 downto 0);
    signal calopt_V_2_4_fu_568_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal calopt_V_2_4_reg_1944 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_fu_574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1951 : STD_LOGIC_VECTOR (0 downto 0);
    signal calopt_V_2_5_fu_580_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal calopt_V_2_5_reg_1957 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal calo_7_hwPt_V_read_4_reg_1974 : STD_LOGIC_VECTOR (15 downto 0);
    signal calo_6_hwPt_V_read_4_reg_1979 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_fu_586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_1984 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_1989 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_1_fu_595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_1_reg_1994 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_1_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_1_reg_1999 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1724_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_2_reg_2004 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_533_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_2_reg_2009 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1730_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_3_reg_2014 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_556_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_3_reg_2019 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_V_4_fu_604_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_V_5_fu_627_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_2046 : STD_LOGIC_VECTOR (0 downto 0);
    signal calopt_V_2_6_fu_656_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal calopt_V_2_6_reg_2052 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_fu_662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_2059 : STD_LOGIC_VECTOR (0 downto 0);
    signal calopt_V_2_7_fu_668_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal calopt_V_2_7_reg_2065 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal calo_9_hwPt_V_read_4_reg_2082 : STD_LOGIC_VECTOR (15 downto 0);
    signal calo_8_hwPt_V_read_4_reg_2087 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_0_hwPt_V_writ_fu_704_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_0_hwPt_V_writ_reg_2092 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_1_hwPt_V_writ_fu_740_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_1_hwPt_V_writ_reg_2099 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_30_2_fu_746_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_2_reg_2106 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_2_fu_751_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_2_reg_2111 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_3_fu_755_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_3_reg_2116 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_3_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_3_reg_2121 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1736_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_4_reg_2126 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_621_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_4_reg_2131 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1742_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_5_reg_2136 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_644_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_5_reg_2141 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_V_6_fu_764_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_V_7_fu_787_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_2168 : STD_LOGIC_VECTOR (0 downto 0);
    signal calopt_V_2_8_fu_816_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal calopt_V_2_8_reg_2174 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_fu_822_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_2181 : STD_LOGIC_VECTOR (0 downto 0);
    signal calopt_V_2_9_fu_828_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal calopt_V_2_9_reg_2187 : STD_LOGIC_VECTOR (15 downto 0);
    signal calo_9_hwPhi_V_read_5_reg_2204 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_8_hwPhi_V_read_5_reg_2209 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_7_hwPhi_V_read_5_reg_2214 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_6_hwPhi_V_read_5_reg_2219 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_5_hwPhi_V_read_5_reg_2224 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_4_hwPhi_V_read_5_reg_2229 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_3_hwPhi_V_read_5_reg_2234 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_2_hwPhi_V_read_5_reg_2239 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_1_hwPhi_V_read_5_reg_2244 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_0_hwPhi_V_read_5_reg_2249 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_9_hwEta_V_read_5_reg_2254 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_8_hwEta_V_read_5_reg_2259 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_7_hwEta_V_read_5_reg_2264 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_6_hwEta_V_read_5_reg_2269 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_5_hwEta_V_read_5_reg_2274 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_4_hwEta_V_read_5_reg_2279 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_3_hwEta_V_read_5_reg_2284 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_2_hwEta_V_read_5_reg_2289 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_1_hwEta_V_read_5_reg_2294 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_0_hwEta_V_read_5_reg_2299 : STD_LOGIC_VECTOR (9 downto 0);
    signal pfout_2_hwPt_V_writ_fu_864_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_2_hwPt_V_writ_reg_2304 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_3_hwPt_V_writ_fu_900_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_3_hwPt_V_writ_reg_2311 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_30_4_fu_906_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_4_reg_2318 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_4_fu_911_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_4_reg_2323 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_5_fu_915_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_5_reg_2328 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_5_fu_920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_5_reg_2333 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1748_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_6_reg_2338 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_781_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_6_reg_2343 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1754_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_7_reg_2348 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_804_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_7_reg_2353 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_V_8_fu_924_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_V_9_fu_947_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal pfout_4_hwPt_V_writ_fu_1000_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_4_hwPt_V_writ_reg_2380 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_5_hwPt_V_writ_fu_1036_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_5_hwPt_V_writ_reg_2387 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_30_6_fu_1042_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_6_reg_2394 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_6_fu_1047_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_6_reg_2399 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_7_fu_1051_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_7_reg_2404 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_7_fu_1056_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_7_reg_2409 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1760_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_8_reg_2414 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_941_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_8_reg_2419 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1766_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_9_reg_2424 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_964_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal op2_assign_9_reg_2429 : STD_LOGIC_VECTOR (31 downto 0);
    signal pfout_6_hwPt_V_writ_fu_1090_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_6_hwPt_V_writ_reg_2434 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_7_hwPt_V_writ_fu_1126_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_7_hwPt_V_writ_reg_2441 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_30_8_fu_1132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_8_reg_2448 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_8_fu_1137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_8_reg_2453 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_9_fu_1141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_9_reg_2458 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_9_fu_1146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_9_reg_2463 : STD_LOGIC_VECTOR (0 downto 0);
    signal pfout_8_hwPt_V_writ_fu_1180_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_8_hwPt_V_writ_reg_2468 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_9_hwPt_V_writ_fu_1216_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pfout_9_hwPt_V_writ_reg_2475 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_20_fu_1222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_2482 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_1_fu_1227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_1_reg_2488 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_2_fu_1232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_2_reg_2494 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_3_fu_1237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_3_reg_2500 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_4_fu_1242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_4_reg_2506 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_5_fu_1247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_5_reg_2512 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_6_fu_1252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_6_reg_2518 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_7_fu_1257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_7_reg_2524 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_8_fu_1262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_8_reg_2530 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_9_fu_1267_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_9_reg_2536 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_port_reg_calo_2_hwPt_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_calo_3_hwPt_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_calo_4_hwPt_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_calo_5_hwPt_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_calo_6_hwPt_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_calo_7_hwPt_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_calo_8_hwPt_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_calo_9_hwPt_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_calo_0_hwEta_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_1_hwEta_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_2_hwEta_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_3_hwEta_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_4_hwEta_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_5_hwEta_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_6_hwEta_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_7_hwEta_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_8_hwEta_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_9_hwEta_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_0_hwPhi_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_1_hwPhi_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_2_hwPhi_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_3_hwPhi_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_4_hwPhi_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_5_hwPhi_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_6_hwPhi_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_7_hwPhi_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_8_hwPhi_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_calo_9_hwPhi_V_read : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_port_reg_sumtk_2_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_sumtk_3_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_sumtk_4_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_sumtk_5_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_sumtk_6_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_sumtk_7_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_sumtk_8_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_sumtk_9_V_read : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_port_reg_sumtkerr2_0_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_sumtkerr2_1_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_sumtkerr2_2_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_sumtkerr2_3_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_sumtkerr2_4_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_sumtkerr2_5_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_sumtkerr2_6_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_sumtkerr2_7_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_sumtkerr2_8_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_sumtkerr2_9_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal tmp_17_fu_449_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_463_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_472_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_486_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal tmp_23_fu_519_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_533_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_542_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_556_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal tmp_25_fu_607_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_621_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_fu_630_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_644_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal sel_tmp_fu_677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp50_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_674_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp3_fu_692_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp3_cast_fu_700_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp5_fu_713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp51_fu_718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_503_fu_710_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp8_fu_728_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp8_cast_fu_736_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_27_fu_767_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_781_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_fu_790_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_804_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal sel_tmp10_fu_837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp52_fu_842_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_fu_847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_504_fu_834_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp13_fu_852_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp13_cast_fu_860_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp15_fu_873_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp53_fu_878_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp17_fu_883_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_505_fu_870_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp18_fu_888_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp18_cast_fu_896_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_29_fu_927_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_941_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_fu_950_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_964_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp20_fu_973_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp54_fu_978_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp22_fu_983_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_506_fu_970_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp23_fu_988_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp23_cast_fu_996_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp25_fu_1009_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp55_fu_1014_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp27_fu_1019_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_507_fu_1006_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp28_fu_1024_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp28_cast_fu_1032_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp30_fu_1063_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp56_fu_1068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp32_fu_1073_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_508_fu_1060_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp33_fu_1078_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp33_cast_fu_1086_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp35_fu_1099_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp57_fu_1104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp37_fu_1109_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_509_fu_1096_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp38_fu_1114_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp38_cast_fu_1122_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp40_fu_1153_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp58_fu_1158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp42_fu_1163_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_510_fu_1150_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp43_fu_1168_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp43_cast_fu_1176_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp45_fu_1189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp59_fu_1194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp47_fu_1199_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_511_fu_1186_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp48_fu_1204_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sel_tmp48_cast_fu_1212_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_21_fu_1284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_1_fu_1305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_2_fu_1326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_3_fu_1347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_4_fu_1368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_5_fu_1389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_6_fu_1410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_7_fu_1431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_8_fu_1452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_9_fu_1473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal calo_0_hwEta_V_read_1_fu_1272_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_1_hwEta_V_read_1_fu_1293_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_2_hwEta_V_read_1_fu_1314_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_3_hwEta_V_read_1_fu_1335_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_4_hwEta_V_read_1_fu_1356_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_5_hwEta_V_read_1_fu_1377_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_6_hwEta_V_read_1_fu_1398_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_7_hwEta_V_read_1_fu_1419_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_8_hwEta_V_read_1_fu_1440_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_9_hwEta_V_read_1_fu_1461_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_0_hwPhi_V_read_1_fu_1278_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_1_hwPhi_V_read_1_fu_1299_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_2_hwPhi_V_read_1_fu_1320_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_3_hwPhi_V_read_1_fu_1341_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_4_hwPhi_V_read_1_fu_1362_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_5_hwPhi_V_read_1_fu_1383_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_6_hwPhi_V_read_1_fu_1404_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_7_hwPhi_V_read_1_fu_1425_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_8_hwPhi_V_read_1_fu_1446_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal calo_9_hwPhi_V_read_1_fu_1467_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal pfout_0_hwId_V_writ_fu_1289_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal pfout_1_hwId_V_writ_fu_1310_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal pfout_2_hwId_V_writ_fu_1331_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal pfout_3_hwId_V_writ_fu_1352_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal pfout_4_hwId_V_writ_fu_1373_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal pfout_5_hwId_V_writ_fu_1394_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal pfout_6_hwId_V_writ_fu_1415_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal pfout_7_hwId_V_writ_fu_1436_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal pfout_8_hwId_V_writ_fu_1457_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal pfout_9_hwId_V_writ_fu_1478_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1712_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1712_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1718_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1718_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1724_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1724_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1730_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1730_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1736_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1736_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1742_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1742_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1748_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1748_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1754_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1754_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1760_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1760_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1766_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1766_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component mp7wrapped_pfalgomb6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component mp7wrapped_pfalgoncg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mp7wrapped_pfalgomb6_U1542 : component mp7wrapped_pfalgomb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_port_reg_sumtkerr2_0_read,
        din1 => grp_fu_463_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_463_p2);

    mp7wrapped_pfalgomb6_U1543 : component mp7wrapped_pfalgomb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_port_reg_sumtkerr2_1_read,
        din1 => grp_fu_486_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_486_p2);

    mp7wrapped_pfalgomb6_U1544 : component mp7wrapped_pfalgomb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_port_reg_sumtkerr2_2_read,
        din1 => grp_fu_533_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_533_p2);

    mp7wrapped_pfalgomb6_U1545 : component mp7wrapped_pfalgomb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_port_reg_sumtkerr2_3_read,
        din1 => grp_fu_556_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_556_p2);

    mp7wrapped_pfalgomb6_U1546 : component mp7wrapped_pfalgomb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_port_reg_sumtkerr2_4_read,
        din1 => grp_fu_621_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_621_p2);

    mp7wrapped_pfalgomb6_U1547 : component mp7wrapped_pfalgomb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_port_reg_sumtkerr2_5_read,
        din1 => grp_fu_644_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_644_p2);

    mp7wrapped_pfalgomb6_U1548 : component mp7wrapped_pfalgomb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_port_reg_sumtkerr2_6_read,
        din1 => grp_fu_781_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_781_p2);

    mp7wrapped_pfalgomb6_U1549 : component mp7wrapped_pfalgomb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_port_reg_sumtkerr2_7_read,
        din1 => grp_fu_804_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_804_p2);

    mp7wrapped_pfalgomb6_U1550 : component mp7wrapped_pfalgomb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_port_reg_sumtkerr2_8_read,
        din1 => grp_fu_941_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_941_p2);

    mp7wrapped_pfalgomb6_U1551 : component mp7wrapped_pfalgomb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_port_reg_sumtkerr2_9_read,
        din1 => grp_fu_964_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_964_p2);

    mp7wrapped_pfalgoncg_U1552 : component mp7wrapped_pfalgoncg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1712_p0,
        din1 => grp_fu_1712_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1712_p2);

    mp7wrapped_pfalgoncg_U1553 : component mp7wrapped_pfalgoncg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1718_p0,
        din1 => grp_fu_1718_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1718_p2);

    mp7wrapped_pfalgoncg_U1554 : component mp7wrapped_pfalgoncg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1724_p0,
        din1 => grp_fu_1724_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1724_p2);

    mp7wrapped_pfalgoncg_U1555 : component mp7wrapped_pfalgoncg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1730_p0,
        din1 => grp_fu_1730_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1730_p2);

    mp7wrapped_pfalgoncg_U1556 : component mp7wrapped_pfalgoncg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1736_p0,
        din1 => grp_fu_1736_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1736_p2);

    mp7wrapped_pfalgoncg_U1557 : component mp7wrapped_pfalgoncg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1742_p0,
        din1 => grp_fu_1742_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1742_p2);

    mp7wrapped_pfalgoncg_U1558 : component mp7wrapped_pfalgoncg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1748_p0,
        din1 => grp_fu_1748_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1748_p2);

    mp7wrapped_pfalgoncg_U1559 : component mp7wrapped_pfalgoncg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1754_p0,
        din1 => grp_fu_1754_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1754_p2);

    mp7wrapped_pfalgoncg_U1560 : component mp7wrapped_pfalgoncg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1760_p0,
        din1 => grp_fu_1760_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1760_p2);

    mp7wrapped_pfalgoncg_U1561 : component mp7wrapped_pfalgoncg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1766_p0,
        din1 => grp_fu_1766_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1766_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_port_reg_calo_0_hwEta_V_read <= calo_0_hwEta_V_read;
                ap_port_reg_calo_0_hwPhi_V_read <= calo_0_hwPhi_V_read;
                ap_port_reg_calo_1_hwEta_V_read <= calo_1_hwEta_V_read;
                ap_port_reg_calo_1_hwPhi_V_read <= calo_1_hwPhi_V_read;
                ap_port_reg_calo_2_hwEta_V_read <= calo_2_hwEta_V_read;
                ap_port_reg_calo_2_hwPhi_V_read <= calo_2_hwPhi_V_read;
                ap_port_reg_calo_2_hwPt_V_read <= calo_2_hwPt_V_read;
                ap_port_reg_calo_3_hwEta_V_read <= calo_3_hwEta_V_read;
                ap_port_reg_calo_3_hwPhi_V_read <= calo_3_hwPhi_V_read;
                ap_port_reg_calo_3_hwPt_V_read <= calo_3_hwPt_V_read;
                ap_port_reg_calo_4_hwEta_V_read <= calo_4_hwEta_V_read;
                ap_port_reg_calo_4_hwPhi_V_read <= calo_4_hwPhi_V_read;
                ap_port_reg_calo_4_hwPt_V_read <= calo_4_hwPt_V_read;
                ap_port_reg_calo_5_hwEta_V_read <= calo_5_hwEta_V_read;
                ap_port_reg_calo_5_hwPhi_V_read <= calo_5_hwPhi_V_read;
                ap_port_reg_calo_5_hwPt_V_read <= calo_5_hwPt_V_read;
                ap_port_reg_calo_6_hwEta_V_read <= calo_6_hwEta_V_read;
                ap_port_reg_calo_6_hwPhi_V_read <= calo_6_hwPhi_V_read;
                ap_port_reg_calo_6_hwPt_V_read <= calo_6_hwPt_V_read;
                ap_port_reg_calo_7_hwEta_V_read <= calo_7_hwEta_V_read;
                ap_port_reg_calo_7_hwPhi_V_read <= calo_7_hwPhi_V_read;
                ap_port_reg_calo_7_hwPt_V_read <= calo_7_hwPt_V_read;
                ap_port_reg_calo_8_hwEta_V_read <= calo_8_hwEta_V_read;
                ap_port_reg_calo_8_hwPhi_V_read <= calo_8_hwPhi_V_read;
                ap_port_reg_calo_8_hwPt_V_read <= calo_8_hwPt_V_read;
                ap_port_reg_calo_9_hwEta_V_read <= calo_9_hwEta_V_read;
                ap_port_reg_calo_9_hwPhi_V_read <= calo_9_hwPhi_V_read;
                ap_port_reg_calo_9_hwPt_V_read <= calo_9_hwPt_V_read;
                ap_port_reg_sumtk_2_V_read <= sumtk_2_V_read;
                ap_port_reg_sumtk_3_V_read <= sumtk_3_V_read;
                ap_port_reg_sumtk_4_V_read <= sumtk_4_V_read;
                ap_port_reg_sumtk_5_V_read <= sumtk_5_V_read;
                ap_port_reg_sumtk_6_V_read <= sumtk_6_V_read;
                ap_port_reg_sumtk_7_V_read <= sumtk_7_V_read;
                ap_port_reg_sumtk_8_V_read <= sumtk_8_V_read;
                ap_port_reg_sumtk_9_V_read <= sumtk_9_V_read;
                ap_port_reg_sumtkerr2_0_read <= sumtkerr2_0_read;
                ap_port_reg_sumtkerr2_1_read <= sumtkerr2_1_read;
                ap_port_reg_sumtkerr2_2_read <= sumtkerr2_2_read;
                ap_port_reg_sumtkerr2_3_read <= sumtkerr2_3_read;
                ap_port_reg_sumtkerr2_4_read <= sumtkerr2_4_read;
                ap_port_reg_sumtkerr2_5_read <= sumtkerr2_5_read;
                ap_port_reg_sumtkerr2_6_read <= sumtkerr2_6_read;
                ap_port_reg_sumtkerr2_7_read <= sumtkerr2_7_read;
                ap_port_reg_sumtkerr2_8_read <= sumtkerr2_8_read;
                ap_port_reg_sumtkerr2_9_read <= sumtkerr2_9_read;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                calo_0_hwEta_V_read_5_reg_2299 <= ap_port_reg_calo_0_hwEta_V_read;
                calo_0_hwPhi_V_read_5_reg_2249 <= ap_port_reg_calo_0_hwPhi_V_read;
                calo_1_hwEta_V_read_5_reg_2294 <= ap_port_reg_calo_1_hwEta_V_read;
                calo_1_hwPhi_V_read_5_reg_2244 <= ap_port_reg_calo_1_hwPhi_V_read;
                calo_2_hwEta_V_read_5_reg_2289 <= ap_port_reg_calo_2_hwEta_V_read;
                calo_2_hwPhi_V_read_5_reg_2239 <= ap_port_reg_calo_2_hwPhi_V_read;
                calo_3_hwEta_V_read_5_reg_2284 <= ap_port_reg_calo_3_hwEta_V_read;
                calo_3_hwPhi_V_read_5_reg_2234 <= ap_port_reg_calo_3_hwPhi_V_read;
                calo_4_hwEta_V_read_5_reg_2279 <= ap_port_reg_calo_4_hwEta_V_read;
                calo_4_hwPhi_V_read_5_reg_2229 <= ap_port_reg_calo_4_hwPhi_V_read;
                calo_5_hwEta_V_read_5_reg_2274 <= ap_port_reg_calo_5_hwEta_V_read;
                calo_5_hwPhi_V_read_5_reg_2224 <= ap_port_reg_calo_5_hwPhi_V_read;
                calo_6_hwEta_V_read_5_reg_2269 <= ap_port_reg_calo_6_hwEta_V_read;
                calo_6_hwPhi_V_read_5_reg_2219 <= ap_port_reg_calo_6_hwPhi_V_read;
                calo_7_hwEta_V_read_5_reg_2264 <= ap_port_reg_calo_7_hwEta_V_read;
                calo_7_hwPhi_V_read_5_reg_2214 <= ap_port_reg_calo_7_hwPhi_V_read;
                calo_8_hwEta_V_read_5_reg_2259 <= ap_port_reg_calo_8_hwEta_V_read;
                calo_8_hwPhi_V_read_5_reg_2209 <= ap_port_reg_calo_8_hwPhi_V_read;
                calo_9_hwEta_V_read_5_reg_2254 <= ap_port_reg_calo_9_hwEta_V_read;
                calo_9_hwPhi_V_read_5_reg_2204 <= ap_port_reg_calo_9_hwPhi_V_read;
                pfout_2_hwPt_V_writ_reg_2304 <= pfout_2_hwPt_V_writ_fu_864_p3;
                pfout_3_hwPt_V_writ_reg_2311 <= pfout_3_hwPt_V_writ_fu_900_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                calo_0_hwPt_V_read_4_reg_1777 <= calo_0_hwPt_V_read;
                calo_1_hwPt_V_read_4_reg_1772 <= calo_1_hwPt_V_read;
                calopt_V_2_1_reg_1801 <= calopt_V_2_1_fu_440_p2;
                calopt_V_2_reg_1788 <= calopt_V_2_fu_428_p2;
                pfout_4_hwPt_V_writ_reg_2380 <= pfout_4_hwPt_V_writ_fu_1000_p3;
                pfout_5_hwPt_V_writ_reg_2387 <= pfout_5_hwPt_V_writ_fu_1036_p3;
                tmp_1_reg_1795 <= tmp_1_fu_434_p2;
                tmp_s_reg_1782 <= tmp_s_fu_422_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                calo_2_hwPt_V_read_4_reg_1823 <= ap_port_reg_calo_2_hwPt_V_read;
                calo_3_hwPt_V_read_4_reg_1818 <= ap_port_reg_calo_3_hwPt_V_read;
                calopt_V_2_2_reg_1856 <= calopt_V_2_2_fu_498_p2;
                calopt_V_2_3_reg_1869 <= calopt_V_2_3_fu_510_p2;
                pfout_6_hwPt_V_writ_reg_2434 <= pfout_6_hwPt_V_writ_fu_1090_p3;
                pfout_7_hwPt_V_writ_reg_2441 <= pfout_7_hwPt_V_writ_fu_1126_p3;
                tmp_2_reg_1850 <= tmp_2_fu_492_p2;
                tmp_3_reg_1863 <= tmp_3_fu_504_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                calo_4_hwPt_V_read_4_reg_1891 <= ap_port_reg_calo_4_hwPt_V_read;
                calo_5_hwPt_V_read_4_reg_1886 <= ap_port_reg_calo_5_hwPt_V_read;
                calopt_V_2_4_reg_1944 <= calopt_V_2_4_fu_568_p2;
                calopt_V_2_5_reg_1957 <= calopt_V_2_5_fu_580_p2;
                pfout_8_hwPt_V_writ_reg_2468 <= pfout_8_hwPt_V_writ_fu_1180_p3;
                pfout_9_hwPt_V_writ_reg_2475 <= pfout_9_hwPt_V_writ_fu_1216_p3;
                tmp_4_reg_1938 <= tmp_4_fu_562_p2;
                tmp_5_reg_1951 <= tmp_5_fu_574_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                calo_6_hwPt_V_read_4_reg_1979 <= ap_port_reg_calo_6_hwPt_V_read;
                calo_7_hwPt_V_read_4_reg_1974 <= ap_port_reg_calo_7_hwPt_V_read;
                calopt_V_2_6_reg_2052 <= calopt_V_2_6_fu_656_p2;
                calopt_V_2_7_reg_2065 <= calopt_V_2_7_fu_668_p2;
                tmp_20_reg_2482 <= tmp_20_fu_1222_p2;
                tmp_33_1_reg_2488 <= tmp_33_1_fu_1227_p2;
                tmp_33_2_reg_2494 <= tmp_33_2_fu_1232_p2;
                tmp_33_3_reg_2500 <= tmp_33_3_fu_1237_p2;
                tmp_33_4_reg_2506 <= tmp_33_4_fu_1242_p2;
                tmp_33_5_reg_2512 <= tmp_33_5_fu_1247_p2;
                tmp_33_6_reg_2518 <= tmp_33_6_fu_1252_p2;
                tmp_33_7_reg_2524 <= tmp_33_7_fu_1257_p2;
                tmp_33_8_reg_2530 <= tmp_33_8_fu_1262_p2;
                tmp_33_9_reg_2536 <= tmp_33_9_fu_1267_p2;
                tmp_6_reg_2046 <= tmp_6_fu_650_p2;
                tmp_7_reg_2059 <= tmp_7_fu_662_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                calo_8_hwPt_V_read_4_reg_2087 <= ap_port_reg_calo_8_hwPt_V_read;
                calo_9_hwPt_V_read_4_reg_2082 <= ap_port_reg_calo_9_hwPt_V_read;
                calopt_V_2_8_reg_2174 <= calopt_V_2_8_fu_816_p2;
                calopt_V_2_9_reg_2187 <= calopt_V_2_9_fu_828_p2;
                pfout_0_hwPt_V_writ_reg_2092 <= pfout_0_hwPt_V_writ_fu_704_p3;
                pfout_1_hwPt_V_writ_reg_2099 <= pfout_1_hwPt_V_writ_fu_740_p3;
                tmp_8_reg_2168 <= tmp_8_fu_810_p2;
                tmp_9_reg_2181 <= tmp_9_fu_822_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_1_reg_1795 = ap_const_lv1_0))) then
                op2_assign_1_reg_1911 <= grp_fu_486_p2;
                r_V_1_reg_1906 <= grp_fu_1718_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (tmp_2_reg_1850 = ap_const_lv1_0))) then
                op2_assign_2_reg_2009 <= grp_fu_533_p2;
                r_V_2_reg_2004 <= grp_fu_1724_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (tmp_3_reg_1863 = ap_const_lv1_0))) then
                op2_assign_3_reg_2019 <= grp_fu_556_p2;
                r_V_3_reg_2014 <= grp_fu_1730_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (tmp_4_reg_1938 = ap_const_lv1_0))) then
                op2_assign_4_reg_2131 <= grp_fu_621_p2;
                r_V_4_reg_2126 <= grp_fu_1736_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (tmp_5_reg_1951 = ap_const_lv1_0))) then
                op2_assign_5_reg_2141 <= grp_fu_644_p2;
                r_V_5_reg_2136 <= grp_fu_1742_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (tmp_6_reg_2046 = ap_const_lv1_0))) then
                op2_assign_6_reg_2343 <= grp_fu_781_p2;
                r_V_6_reg_2338 <= grp_fu_1748_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (tmp_7_reg_2059 = ap_const_lv1_0))) then
                op2_assign_7_reg_2353 <= grp_fu_804_p2;
                r_V_7_reg_2348 <= grp_fu_1754_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_8_reg_2168 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                op2_assign_8_reg_2419 <= grp_fu_941_p2;
                r_V_8_reg_2414 <= grp_fu_1760_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_9_reg_2181 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                op2_assign_9_reg_2429 <= grp_fu_964_p2;
                r_V_9_reg_2424 <= grp_fu_1766_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_s_reg_1782 = ap_const_lv1_0))) then
                op2_assign_reg_1901 <= grp_fu_463_p2;
                r_V_reg_1896 <= grp_fu_1712_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (tmp_s_reg_1782 = ap_const_lv1_0))) then
                tmp_16_reg_1984 <= tmp_16_fu_586_p2;
                tmp_19_reg_1989 <= tmp_19_fu_591_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (tmp_1_reg_1795 = ap_const_lv1_0))) then
                tmp_30_1_reg_1994 <= tmp_30_1_fu_595_p2;
                tmp_32_1_reg_1999 <= tmp_32_1_fu_600_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (tmp_2_reg_1850 = ap_const_lv1_0))) then
                tmp_30_2_reg_2106 <= tmp_30_2_fu_746_p2;
                tmp_32_2_reg_2111 <= tmp_32_2_fu_751_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (tmp_3_reg_1863 = ap_const_lv1_0))) then
                tmp_30_3_reg_2116 <= tmp_30_3_fu_755_p2;
                tmp_32_3_reg_2121 <= tmp_32_3_fu_760_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (tmp_4_reg_1938 = ap_const_lv1_0))) then
                tmp_30_4_reg_2318 <= tmp_30_4_fu_906_p2;
                tmp_32_4_reg_2323 <= tmp_32_4_fu_911_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (tmp_5_reg_1951 = ap_const_lv1_0))) then
                tmp_30_5_reg_2328 <= tmp_30_5_fu_915_p2;
                tmp_32_5_reg_2333 <= tmp_32_5_fu_920_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_6_reg_2046 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_30_6_reg_2394 <= tmp_30_6_fu_1042_p2;
                tmp_32_6_reg_2399 <= tmp_32_6_fu_1047_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_7_reg_2059 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_30_7_reg_2404 <= tmp_30_7_fu_1051_p2;
                tmp_32_7_reg_2409 <= tmp_32_7_fu_1056_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_8_reg_2168 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_30_8_reg_2448 <= tmp_30_8_fu_1132_p2;
                tmp_32_8_reg_2453 <= tmp_32_8_fu_1137_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_9_reg_2181 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_30_9_reg_2458 <= tmp_30_9_fu_1141_p2;
                tmp_32_9_reg_2463 <= tmp_32_9_fu_1146_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_reset_idle_pp0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= pfout_0_hwPt_V_writ_reg_2092;
    ap_return_1 <= pfout_1_hwPt_V_writ_reg_2099;
    ap_return_10 <= calo_0_hwEta_V_read_1_fu_1272_p3;
    ap_return_11 <= calo_1_hwEta_V_read_1_fu_1293_p3;
    ap_return_12 <= calo_2_hwEta_V_read_1_fu_1314_p3;
    ap_return_13 <= calo_3_hwEta_V_read_1_fu_1335_p3;
    ap_return_14 <= calo_4_hwEta_V_read_1_fu_1356_p3;
    ap_return_15 <= calo_5_hwEta_V_read_1_fu_1377_p3;
    ap_return_16 <= calo_6_hwEta_V_read_1_fu_1398_p3;
    ap_return_17 <= calo_7_hwEta_V_read_1_fu_1419_p3;
    ap_return_18 <= calo_8_hwEta_V_read_1_fu_1440_p3;
    ap_return_19 <= calo_9_hwEta_V_read_1_fu_1461_p3;
    ap_return_2 <= pfout_2_hwPt_V_writ_reg_2304;
    ap_return_20 <= calo_0_hwPhi_V_read_1_fu_1278_p3;
    ap_return_21 <= calo_1_hwPhi_V_read_1_fu_1299_p3;
    ap_return_22 <= calo_2_hwPhi_V_read_1_fu_1320_p3;
    ap_return_23 <= calo_3_hwPhi_V_read_1_fu_1341_p3;
    ap_return_24 <= calo_4_hwPhi_V_read_1_fu_1362_p3;
    ap_return_25 <= calo_5_hwPhi_V_read_1_fu_1383_p3;
    ap_return_26 <= calo_6_hwPhi_V_read_1_fu_1404_p3;
    ap_return_27 <= calo_7_hwPhi_V_read_1_fu_1425_p3;
    ap_return_28 <= calo_8_hwPhi_V_read_1_fu_1446_p3;
    ap_return_29 <= calo_9_hwPhi_V_read_1_fu_1467_p3;
    ap_return_3 <= pfout_3_hwPt_V_writ_reg_2311;
    ap_return_30 <= pfout_0_hwId_V_writ_fu_1289_p1;
    ap_return_31 <= pfout_1_hwId_V_writ_fu_1310_p1;
    ap_return_32 <= pfout_2_hwId_V_writ_fu_1331_p1;
    ap_return_33 <= pfout_3_hwId_V_writ_fu_1352_p1;
    ap_return_34 <= pfout_4_hwId_V_writ_fu_1373_p1;
    ap_return_35 <= pfout_5_hwId_V_writ_fu_1394_p1;
    ap_return_36 <= pfout_6_hwId_V_writ_fu_1415_p1;
    ap_return_37 <= pfout_7_hwId_V_writ_fu_1436_p1;
    ap_return_38 <= pfout_8_hwId_V_writ_fu_1457_p1;
    ap_return_39 <= pfout_9_hwId_V_writ_fu_1478_p1;
    ap_return_4 <= pfout_4_hwPt_V_writ_reg_2380;
    ap_return_5 <= pfout_5_hwPt_V_writ_reg_2387;
    ap_return_6 <= pfout_6_hwPt_V_writ_reg_2434;
    ap_return_7 <= pfout_7_hwPt_V_writ_reg_2441;
    ap_return_8 <= pfout_8_hwPt_V_writ_reg_2468;
    ap_return_9 <= pfout_9_hwPt_V_writ_reg_2475;
    calo_0_hwEta_V_read_1_fu_1272_p3 <= 
        ap_const_lv10_0 when (tmp_20_reg_2482(0) = '1') else 
        calo_0_hwEta_V_read_5_reg_2299;
    calo_0_hwPhi_V_read_1_fu_1278_p3 <= 
        ap_const_lv10_0 when (tmp_20_reg_2482(0) = '1') else 
        calo_0_hwPhi_V_read_5_reg_2249;
    calo_1_hwEta_V_read_1_fu_1293_p3 <= 
        ap_const_lv10_0 when (tmp_33_1_reg_2488(0) = '1') else 
        calo_1_hwEta_V_read_5_reg_2294;
    calo_1_hwPhi_V_read_1_fu_1299_p3 <= 
        ap_const_lv10_0 when (tmp_33_1_reg_2488(0) = '1') else 
        calo_1_hwPhi_V_read_5_reg_2244;
    calo_2_hwEta_V_read_1_fu_1314_p3 <= 
        ap_const_lv10_0 when (tmp_33_2_reg_2494(0) = '1') else 
        calo_2_hwEta_V_read_5_reg_2289;
    calo_2_hwPhi_V_read_1_fu_1320_p3 <= 
        ap_const_lv10_0 when (tmp_33_2_reg_2494(0) = '1') else 
        calo_2_hwPhi_V_read_5_reg_2239;
    calo_3_hwEta_V_read_1_fu_1335_p3 <= 
        ap_const_lv10_0 when (tmp_33_3_reg_2500(0) = '1') else 
        calo_3_hwEta_V_read_5_reg_2284;
    calo_3_hwPhi_V_read_1_fu_1341_p3 <= 
        ap_const_lv10_0 when (tmp_33_3_reg_2500(0) = '1') else 
        calo_3_hwPhi_V_read_5_reg_2234;
    calo_4_hwEta_V_read_1_fu_1356_p3 <= 
        ap_const_lv10_0 when (tmp_33_4_reg_2506(0) = '1') else 
        calo_4_hwEta_V_read_5_reg_2279;
    calo_4_hwPhi_V_read_1_fu_1362_p3 <= 
        ap_const_lv10_0 when (tmp_33_4_reg_2506(0) = '1') else 
        calo_4_hwPhi_V_read_5_reg_2229;
    calo_5_hwEta_V_read_1_fu_1377_p3 <= 
        ap_const_lv10_0 when (tmp_33_5_reg_2512(0) = '1') else 
        calo_5_hwEta_V_read_5_reg_2274;
    calo_5_hwPhi_V_read_1_fu_1383_p3 <= 
        ap_const_lv10_0 when (tmp_33_5_reg_2512(0) = '1') else 
        calo_5_hwPhi_V_read_5_reg_2224;
    calo_6_hwEta_V_read_1_fu_1398_p3 <= 
        ap_const_lv10_0 when (tmp_33_6_reg_2518(0) = '1') else 
        calo_6_hwEta_V_read_5_reg_2269;
    calo_6_hwPhi_V_read_1_fu_1404_p3 <= 
        ap_const_lv10_0 when (tmp_33_6_reg_2518(0) = '1') else 
        calo_6_hwPhi_V_read_5_reg_2219;
    calo_7_hwEta_V_read_1_fu_1419_p3 <= 
        ap_const_lv10_0 when (tmp_33_7_reg_2524(0) = '1') else 
        calo_7_hwEta_V_read_5_reg_2264;
    calo_7_hwPhi_V_read_1_fu_1425_p3 <= 
        ap_const_lv10_0 when (tmp_33_7_reg_2524(0) = '1') else 
        calo_7_hwPhi_V_read_5_reg_2214;
    calo_8_hwEta_V_read_1_fu_1440_p3 <= 
        ap_const_lv10_0 when (tmp_33_8_reg_2530(0) = '1') else 
        calo_8_hwEta_V_read_5_reg_2259;
    calo_8_hwPhi_V_read_1_fu_1446_p3 <= 
        ap_const_lv10_0 when (tmp_33_8_reg_2530(0) = '1') else 
        calo_8_hwPhi_V_read_5_reg_2209;
    calo_9_hwEta_V_read_1_fu_1461_p3 <= 
        ap_const_lv10_0 when (tmp_33_9_reg_2536(0) = '1') else 
        calo_9_hwEta_V_read_5_reg_2254;
    calo_9_hwPhi_V_read_1_fu_1467_p3 <= 
        ap_const_lv10_0 when (tmp_33_9_reg_2536(0) = '1') else 
        calo_9_hwPhi_V_read_5_reg_2204;
    calopt_V_2_1_fu_440_p2 <= std_logic_vector(unsigned(calo_1_hwPt_V_read) - unsigned(sumtk_1_V_read));
    calopt_V_2_2_fu_498_p2 <= std_logic_vector(unsigned(ap_port_reg_calo_2_hwPt_V_read) - unsigned(ap_port_reg_sumtk_2_V_read));
    calopt_V_2_3_fu_510_p2 <= std_logic_vector(unsigned(ap_port_reg_calo_3_hwPt_V_read) - unsigned(ap_port_reg_sumtk_3_V_read));
    calopt_V_2_4_fu_568_p2 <= std_logic_vector(unsigned(ap_port_reg_calo_4_hwPt_V_read) - unsigned(ap_port_reg_sumtk_4_V_read));
    calopt_V_2_5_fu_580_p2 <= std_logic_vector(unsigned(ap_port_reg_calo_5_hwPt_V_read) - unsigned(ap_port_reg_sumtk_5_V_read));
    calopt_V_2_6_fu_656_p2 <= std_logic_vector(unsigned(ap_port_reg_calo_6_hwPt_V_read) - unsigned(ap_port_reg_sumtk_6_V_read));
    calopt_V_2_7_fu_668_p2 <= std_logic_vector(unsigned(ap_port_reg_calo_7_hwPt_V_read) - unsigned(ap_port_reg_sumtk_7_V_read));
    calopt_V_2_8_fu_816_p2 <= std_logic_vector(unsigned(ap_port_reg_calo_8_hwPt_V_read) - unsigned(ap_port_reg_sumtk_8_V_read));
    calopt_V_2_9_fu_828_p2 <= std_logic_vector(unsigned(ap_port_reg_calo_9_hwPt_V_read) - unsigned(ap_port_reg_sumtk_9_V_read));
    calopt_V_2_fu_428_p2 <= std_logic_vector(unsigned(calo_0_hwPt_V_read) - unsigned(sumtk_0_V_read));
    grp_fu_1712_p0 <= lhs_V_fu_446_p1(16 - 1 downto 0);
    grp_fu_1712_p1 <= lhs_V_fu_446_p1(16 - 1 downto 0);
    grp_fu_1718_p0 <= lhs_V_1_fu_469_p1(16 - 1 downto 0);
    grp_fu_1718_p1 <= lhs_V_1_fu_469_p1(16 - 1 downto 0);
    grp_fu_1724_p0 <= lhs_V_2_fu_516_p1(16 - 1 downto 0);
    grp_fu_1724_p1 <= lhs_V_2_fu_516_p1(16 - 1 downto 0);
    grp_fu_1730_p0 <= lhs_V_3_fu_539_p1(16 - 1 downto 0);
    grp_fu_1730_p1 <= lhs_V_3_fu_539_p1(16 - 1 downto 0);
    grp_fu_1736_p0 <= lhs_V_4_fu_604_p1(16 - 1 downto 0);
    grp_fu_1736_p1 <= lhs_V_4_fu_604_p1(16 - 1 downto 0);
    grp_fu_1742_p0 <= lhs_V_5_fu_627_p1(16 - 1 downto 0);
    grp_fu_1742_p1 <= lhs_V_5_fu_627_p1(16 - 1 downto 0);
    grp_fu_1748_p0 <= lhs_V_6_fu_764_p1(16 - 1 downto 0);
    grp_fu_1748_p1 <= lhs_V_6_fu_764_p1(16 - 1 downto 0);
    grp_fu_1754_p0 <= lhs_V_7_fu_787_p1(16 - 1 downto 0);
    grp_fu_1754_p1 <= lhs_V_7_fu_787_p1(16 - 1 downto 0);
    grp_fu_1760_p0 <= lhs_V_8_fu_924_p1(16 - 1 downto 0);
    grp_fu_1760_p1 <= lhs_V_8_fu_924_p1(16 - 1 downto 0);
    grp_fu_1766_p0 <= lhs_V_9_fu_947_p1(16 - 1 downto 0);
    grp_fu_1766_p1 <= lhs_V_9_fu_947_p1(16 - 1 downto 0);
        grp_fu_463_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_17_fu_449_p4),32));

        grp_fu_486_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_22_fu_472_p4),32));

        grp_fu_533_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_23_fu_519_p4),32));

        grp_fu_556_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_24_fu_542_p4),32));

        grp_fu_621_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_25_fu_607_p4),32));

        grp_fu_644_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_26_fu_630_p4),32));

        grp_fu_781_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_27_fu_767_p4),32));

        grp_fu_804_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_28_fu_790_p4),32));

        grp_fu_941_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_29_fu_927_p4),32));

        grp_fu_964_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_30_fu_950_p4),32));

    lhs_V_1_fu_469_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(calopt_V_2_1_reg_1801),32));
    lhs_V_2_fu_516_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(calopt_V_2_2_reg_1856),32));
    lhs_V_3_fu_539_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(calopt_V_2_3_reg_1869),32));
    lhs_V_4_fu_604_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(calopt_V_2_4_reg_1944),32));
    lhs_V_5_fu_627_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(calopt_V_2_5_reg_1957),32));
    lhs_V_6_fu_764_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(calopt_V_2_6_reg_2052),32));
    lhs_V_7_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(calopt_V_2_7_reg_2065),32));
    lhs_V_8_fu_924_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(calopt_V_2_8_reg_2174),32));
    lhs_V_9_fu_947_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(calopt_V_2_9_reg_2187),32));
    lhs_V_fu_446_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(calopt_V_2_reg_1788),32));
    pfout_0_hwId_V_writ_fu_1289_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_fu_1284_p2),3));
    pfout_0_hwPt_V_writ_fu_704_p3 <= 
        calo_0_hwPt_V_read_4_reg_1777 when (tmp_s_reg_1782(0) = '1') else 
        sel_tmp3_cast_fu_700_p1;
    pfout_1_hwId_V_writ_fu_1310_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_1_fu_1305_p2),3));
    pfout_1_hwPt_V_writ_fu_740_p3 <= 
        calo_1_hwPt_V_read_4_reg_1772 when (tmp_1_reg_1795(0) = '1') else 
        sel_tmp8_cast_fu_736_p1;
    pfout_2_hwId_V_writ_fu_1331_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_2_fu_1326_p2),3));
    pfout_2_hwPt_V_writ_fu_864_p3 <= 
        calo_2_hwPt_V_read_4_reg_1823 when (tmp_2_reg_1850(0) = '1') else 
        sel_tmp13_cast_fu_860_p1;
    pfout_3_hwId_V_writ_fu_1352_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_3_fu_1347_p2),3));
    pfout_3_hwPt_V_writ_fu_900_p3 <= 
        calo_3_hwPt_V_read_4_reg_1818 when (tmp_3_reg_1863(0) = '1') else 
        sel_tmp18_cast_fu_896_p1;
    pfout_4_hwId_V_writ_fu_1373_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_4_fu_1368_p2),3));
    pfout_4_hwPt_V_writ_fu_1000_p3 <= 
        calo_4_hwPt_V_read_4_reg_1891 when (tmp_4_reg_1938(0) = '1') else 
        sel_tmp23_cast_fu_996_p1;
    pfout_5_hwId_V_writ_fu_1394_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_5_fu_1389_p2),3));
    pfout_5_hwPt_V_writ_fu_1036_p3 <= 
        calo_5_hwPt_V_read_4_reg_1886 when (tmp_5_reg_1951(0) = '1') else 
        sel_tmp28_cast_fu_1032_p1;
    pfout_6_hwId_V_writ_fu_1415_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_6_fu_1410_p2),3));
    pfout_6_hwPt_V_writ_fu_1090_p3 <= 
        calo_6_hwPt_V_read_4_reg_1979 when (tmp_6_reg_2046(0) = '1') else 
        sel_tmp33_cast_fu_1086_p1;
    pfout_7_hwId_V_writ_fu_1436_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_7_fu_1431_p2),3));
    pfout_7_hwPt_V_writ_fu_1126_p3 <= 
        calo_7_hwPt_V_read_4_reg_1974 when (tmp_7_reg_2059(0) = '1') else 
        sel_tmp38_cast_fu_1122_p1;
    pfout_8_hwId_V_writ_fu_1457_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_8_fu_1452_p2),3));
    pfout_8_hwPt_V_writ_fu_1180_p3 <= 
        calo_8_hwPt_V_read_4_reg_2087 when (tmp_8_reg_2168(0) = '1') else 
        sel_tmp43_cast_fu_1176_p1;
    pfout_9_hwId_V_writ_fu_1478_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_9_fu_1473_p2),3));
    pfout_9_hwPt_V_writ_fu_1216_p3 <= 
        calo_9_hwPt_V_read_4_reg_2082 when (tmp_9_reg_2181(0) = '1') else 
        sel_tmp48_cast_fu_1212_p1;
    sel_tmp10_fu_837_p2 <= (tmp_2_reg_1850 xor ap_const_lv1_1);
    sel_tmp12_fu_847_p2 <= (tmp_30_2_reg_2106 and tmp52_fu_842_p2);
    sel_tmp13_cast_fu_860_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sel_tmp13_fu_852_p3),16));
    sel_tmp13_fu_852_p3 <= 
        tmp_504_fu_834_p1 when (sel_tmp12_fu_847_p2(0) = '1') else 
        ap_const_lv15_0;
    sel_tmp15_fu_873_p2 <= (tmp_3_reg_1863 xor ap_const_lv1_1);
    sel_tmp17_fu_883_p2 <= (tmp_30_3_reg_2116 and tmp53_fu_878_p2);
    sel_tmp18_cast_fu_896_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sel_tmp18_fu_888_p3),16));
    sel_tmp18_fu_888_p3 <= 
        tmp_505_fu_870_p1 when (sel_tmp17_fu_883_p2(0) = '1') else 
        ap_const_lv15_0;
    sel_tmp20_fu_973_p2 <= (tmp_4_reg_1938 xor ap_const_lv1_1);
    sel_tmp22_fu_983_p2 <= (tmp_30_4_reg_2318 and tmp54_fu_978_p2);
    sel_tmp23_cast_fu_996_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sel_tmp23_fu_988_p3),16));
    sel_tmp23_fu_988_p3 <= 
        tmp_506_fu_970_p1 when (sel_tmp22_fu_983_p2(0) = '1') else 
        ap_const_lv15_0;
    sel_tmp25_fu_1009_p2 <= (tmp_5_reg_1951 xor ap_const_lv1_1);
    sel_tmp27_fu_1019_p2 <= (tmp_30_5_reg_2328 and tmp55_fu_1014_p2);
    sel_tmp28_cast_fu_1032_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sel_tmp28_fu_1024_p3),16));
    sel_tmp28_fu_1024_p3 <= 
        tmp_507_fu_1006_p1 when (sel_tmp27_fu_1019_p2(0) = '1') else 
        ap_const_lv15_0;
    sel_tmp2_fu_687_p2 <= (tmp_16_reg_1984 and tmp50_fu_682_p2);
    sel_tmp30_fu_1063_p2 <= (tmp_6_reg_2046 xor ap_const_lv1_1);
    sel_tmp32_fu_1073_p2 <= (tmp_30_6_reg_2394 and tmp56_fu_1068_p2);
    sel_tmp33_cast_fu_1086_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sel_tmp33_fu_1078_p3),16));
    sel_tmp33_fu_1078_p3 <= 
        tmp_508_fu_1060_p1 when (sel_tmp32_fu_1073_p2(0) = '1') else 
        ap_const_lv15_0;
    sel_tmp35_fu_1099_p2 <= (tmp_7_reg_2059 xor ap_const_lv1_1);
    sel_tmp37_fu_1109_p2 <= (tmp_30_7_reg_2404 and tmp57_fu_1104_p2);
    sel_tmp38_cast_fu_1122_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sel_tmp38_fu_1114_p3),16));
    sel_tmp38_fu_1114_p3 <= 
        tmp_509_fu_1096_p1 when (sel_tmp37_fu_1109_p2(0) = '1') else 
        ap_const_lv15_0;
    sel_tmp3_cast_fu_700_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sel_tmp3_fu_692_p3),16));
    sel_tmp3_fu_692_p3 <= 
        tmp_fu_674_p1 when (sel_tmp2_fu_687_p2(0) = '1') else 
        ap_const_lv15_0;
    sel_tmp40_fu_1153_p2 <= (tmp_8_reg_2168 xor ap_const_lv1_1);
    sel_tmp42_fu_1163_p2 <= (tmp_30_8_reg_2448 and tmp58_fu_1158_p2);
    sel_tmp43_cast_fu_1176_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sel_tmp43_fu_1168_p3),16));
    sel_tmp43_fu_1168_p3 <= 
        tmp_510_fu_1150_p1 when (sel_tmp42_fu_1163_p2(0) = '1') else 
        ap_const_lv15_0;
    sel_tmp45_fu_1189_p2 <= (tmp_9_reg_2181 xor ap_const_lv1_1);
    sel_tmp47_fu_1199_p2 <= (tmp_30_9_reg_2458 and tmp59_fu_1194_p2);
    sel_tmp48_cast_fu_1212_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sel_tmp48_fu_1204_p3),16));
    sel_tmp48_fu_1204_p3 <= 
        tmp_511_fu_1186_p1 when (sel_tmp47_fu_1199_p2(0) = '1') else 
        ap_const_lv15_0;
    sel_tmp5_fu_713_p2 <= (tmp_1_reg_1795 xor ap_const_lv1_1);
    sel_tmp7_fu_723_p2 <= (tmp_30_1_reg_1994 and tmp51_fu_718_p2);
    sel_tmp8_cast_fu_736_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sel_tmp8_fu_728_p3),16));
    sel_tmp8_fu_728_p3 <= 
        tmp_503_fu_710_p1 when (sel_tmp7_fu_723_p2(0) = '1') else 
        ap_const_lv15_0;
    sel_tmp_fu_677_p2 <= (tmp_s_reg_1782 xor ap_const_lv1_1);
    tmp50_fu_682_p2 <= (tmp_19_reg_1989 and sel_tmp_fu_677_p2);
    tmp51_fu_718_p2 <= (tmp_32_1_reg_1999 and sel_tmp5_fu_713_p2);
    tmp52_fu_842_p2 <= (tmp_32_2_reg_2111 and sel_tmp10_fu_837_p2);
    tmp53_fu_878_p2 <= (tmp_32_3_reg_2121 and sel_tmp15_fu_873_p2);
    tmp54_fu_978_p2 <= (tmp_32_4_reg_2323 and sel_tmp20_fu_973_p2);
    tmp55_fu_1014_p2 <= (tmp_32_5_reg_2333 and sel_tmp25_fu_1009_p2);
    tmp56_fu_1068_p2 <= (tmp_32_6_reg_2399 and sel_tmp30_fu_1063_p2);
    tmp57_fu_1104_p2 <= (tmp_32_7_reg_2409 and sel_tmp35_fu_1099_p2);
    tmp58_fu_1158_p2 <= (tmp_32_8_reg_2453 and sel_tmp40_fu_1153_p2);
    tmp59_fu_1194_p2 <= (tmp_32_9_reg_2463 and sel_tmp45_fu_1189_p2);
    tmp_16_fu_586_p2 <= "1" when (signed(calopt_V_2_reg_1788) > signed(ap_const_lv16_0)) else "0";
    tmp_17_fu_449_p4 <= ap_port_reg_sumtkerr2_0_read(31 downto 1);
    tmp_19_fu_591_p2 <= "1" when (signed(r_V_reg_1896) > signed(op2_assign_reg_1901)) else "0";
    tmp_1_fu_434_p2 <= "1" when (sumtk_1_V_read = ap_const_lv16_0) else "0";
    tmp_20_fu_1222_p2 <= "1" when (pfout_0_hwPt_V_writ_reg_2092 = ap_const_lv16_0) else "0";
    tmp_21_fu_1284_p2 <= "0" when (pfout_0_hwPt_V_writ_reg_2092 = ap_const_lv16_0) else "1";
    tmp_22_fu_472_p4 <= ap_port_reg_sumtkerr2_1_read(31 downto 1);
    tmp_23_fu_519_p4 <= ap_port_reg_sumtkerr2_2_read(31 downto 1);
    tmp_24_fu_542_p4 <= ap_port_reg_sumtkerr2_3_read(31 downto 1);
    tmp_25_fu_607_p4 <= ap_port_reg_sumtkerr2_4_read(31 downto 1);
    tmp_26_fu_630_p4 <= ap_port_reg_sumtkerr2_5_read(31 downto 1);
    tmp_27_fu_767_p4 <= ap_port_reg_sumtkerr2_6_read(31 downto 1);
    tmp_28_fu_790_p4 <= ap_port_reg_sumtkerr2_7_read(31 downto 1);
    tmp_29_fu_927_p4 <= ap_port_reg_sumtkerr2_8_read(31 downto 1);
    tmp_2_fu_492_p2 <= "1" when (ap_port_reg_sumtk_2_V_read = ap_const_lv16_0) else "0";
    tmp_30_1_fu_595_p2 <= "1" when (signed(calopt_V_2_1_reg_1801) > signed(ap_const_lv16_0)) else "0";
    tmp_30_2_fu_746_p2 <= "1" when (signed(calopt_V_2_2_reg_1856) > signed(ap_const_lv16_0)) else "0";
    tmp_30_3_fu_755_p2 <= "1" when (signed(calopt_V_2_3_reg_1869) > signed(ap_const_lv16_0)) else "0";
    tmp_30_4_fu_906_p2 <= "1" when (signed(calopt_V_2_4_reg_1944) > signed(ap_const_lv16_0)) else "0";
    tmp_30_5_fu_915_p2 <= "1" when (signed(calopt_V_2_5_reg_1957) > signed(ap_const_lv16_0)) else "0";
    tmp_30_6_fu_1042_p2 <= "1" when (signed(calopt_V_2_6_reg_2052) > signed(ap_const_lv16_0)) else "0";
    tmp_30_7_fu_1051_p2 <= "1" when (signed(calopt_V_2_7_reg_2065) > signed(ap_const_lv16_0)) else "0";
    tmp_30_8_fu_1132_p2 <= "1" when (signed(calopt_V_2_8_reg_2174) > signed(ap_const_lv16_0)) else "0";
    tmp_30_9_fu_1141_p2 <= "1" when (signed(calopt_V_2_9_reg_2187) > signed(ap_const_lv16_0)) else "0";
    tmp_30_fu_950_p4 <= ap_port_reg_sumtkerr2_9_read(31 downto 1);
    tmp_32_1_fu_600_p2 <= "1" when (signed(r_V_1_reg_1906) > signed(op2_assign_1_reg_1911)) else "0";
    tmp_32_2_fu_751_p2 <= "1" when (signed(r_V_2_reg_2004) > signed(op2_assign_2_reg_2009)) else "0";
    tmp_32_3_fu_760_p2 <= "1" when (signed(r_V_3_reg_2014) > signed(op2_assign_3_reg_2019)) else "0";
    tmp_32_4_fu_911_p2 <= "1" when (signed(r_V_4_reg_2126) > signed(op2_assign_4_reg_2131)) else "0";
    tmp_32_5_fu_920_p2 <= "1" when (signed(r_V_5_reg_2136) > signed(op2_assign_5_reg_2141)) else "0";
    tmp_32_6_fu_1047_p2 <= "1" when (signed(r_V_6_reg_2338) > signed(op2_assign_6_reg_2343)) else "0";
    tmp_32_7_fu_1056_p2 <= "1" when (signed(r_V_7_reg_2348) > signed(op2_assign_7_reg_2353)) else "0";
    tmp_32_8_fu_1137_p2 <= "1" when (signed(r_V_8_reg_2414) > signed(op2_assign_8_reg_2419)) else "0";
    tmp_32_9_fu_1146_p2 <= "1" when (signed(r_V_9_reg_2424) > signed(op2_assign_9_reg_2429)) else "0";
    tmp_33_1_fu_1227_p2 <= "1" when (pfout_1_hwPt_V_writ_reg_2099 = ap_const_lv16_0) else "0";
    tmp_33_2_fu_1232_p2 <= "1" when (pfout_2_hwPt_V_writ_reg_2304 = ap_const_lv16_0) else "0";
    tmp_33_3_fu_1237_p2 <= "1" when (pfout_3_hwPt_V_writ_reg_2311 = ap_const_lv16_0) else "0";
    tmp_33_4_fu_1242_p2 <= "1" when (pfout_4_hwPt_V_writ_reg_2380 = ap_const_lv16_0) else "0";
    tmp_33_5_fu_1247_p2 <= "1" when (pfout_5_hwPt_V_writ_reg_2387 = ap_const_lv16_0) else "0";
    tmp_33_6_fu_1252_p2 <= "1" when (pfout_6_hwPt_V_writ_reg_2434 = ap_const_lv16_0) else "0";
    tmp_33_7_fu_1257_p2 <= "1" when (pfout_7_hwPt_V_writ_reg_2441 = ap_const_lv16_0) else "0";
    tmp_33_8_fu_1262_p2 <= "1" when (pfout_8_hwPt_V_writ_reg_2468 = ap_const_lv16_0) else "0";
    tmp_33_9_fu_1267_p2 <= "1" when (pfout_9_hwPt_V_writ_reg_2475 = ap_const_lv16_0) else "0";
    tmp_34_1_fu_1305_p2 <= "0" when (pfout_1_hwPt_V_writ_reg_2099 = ap_const_lv16_0) else "1";
    tmp_34_2_fu_1326_p2 <= "0" when (pfout_2_hwPt_V_writ_reg_2304 = ap_const_lv16_0) else "1";
    tmp_34_3_fu_1347_p2 <= "0" when (pfout_3_hwPt_V_writ_reg_2311 = ap_const_lv16_0) else "1";
    tmp_34_4_fu_1368_p2 <= "0" when (pfout_4_hwPt_V_writ_reg_2380 = ap_const_lv16_0) else "1";
    tmp_34_5_fu_1389_p2 <= "0" when (pfout_5_hwPt_V_writ_reg_2387 = ap_const_lv16_0) else "1";
    tmp_34_6_fu_1410_p2 <= "0" when (pfout_6_hwPt_V_writ_reg_2434 = ap_const_lv16_0) else "1";
    tmp_34_7_fu_1431_p2 <= "0" when (pfout_7_hwPt_V_writ_reg_2441 = ap_const_lv16_0) else "1";
    tmp_34_8_fu_1452_p2 <= "0" when (pfout_8_hwPt_V_writ_reg_2468 = ap_const_lv16_0) else "1";
    tmp_34_9_fu_1473_p2 <= "0" when (pfout_9_hwPt_V_writ_reg_2475 = ap_const_lv16_0) else "1";
    tmp_3_fu_504_p2 <= "1" when (ap_port_reg_sumtk_3_V_read = ap_const_lv16_0) else "0";
    tmp_4_fu_562_p2 <= "1" when (ap_port_reg_sumtk_4_V_read = ap_const_lv16_0) else "0";
    tmp_503_fu_710_p1 <= calopt_V_2_1_reg_1801(15 - 1 downto 0);
    tmp_504_fu_834_p1 <= calopt_V_2_2_reg_1856(15 - 1 downto 0);
    tmp_505_fu_870_p1 <= calopt_V_2_3_reg_1869(15 - 1 downto 0);
    tmp_506_fu_970_p1 <= calopt_V_2_4_reg_1944(15 - 1 downto 0);
    tmp_507_fu_1006_p1 <= calopt_V_2_5_reg_1957(15 - 1 downto 0);
    tmp_508_fu_1060_p1 <= calopt_V_2_6_reg_2052(15 - 1 downto 0);
    tmp_509_fu_1096_p1 <= calopt_V_2_7_reg_2065(15 - 1 downto 0);
    tmp_510_fu_1150_p1 <= calopt_V_2_8_reg_2174(15 - 1 downto 0);
    tmp_511_fu_1186_p1 <= calopt_V_2_9_reg_2187(15 - 1 downto 0);
    tmp_5_fu_574_p2 <= "1" when (ap_port_reg_sumtk_5_V_read = ap_const_lv16_0) else "0";
    tmp_6_fu_650_p2 <= "1" when (ap_port_reg_sumtk_6_V_read = ap_const_lv16_0) else "0";
    tmp_7_fu_662_p2 <= "1" when (ap_port_reg_sumtk_7_V_read = ap_const_lv16_0) else "0";
    tmp_8_fu_810_p2 <= "1" when (ap_port_reg_sumtk_8_V_read = ap_const_lv16_0) else "0";
    tmp_9_fu_822_p2 <= "1" when (ap_port_reg_sumtk_9_V_read = ap_const_lv16_0) else "0";
    tmp_fu_674_p1 <= calopt_V_2_reg_1788(15 - 1 downto 0);
    tmp_s_fu_422_p2 <= "1" when (sumtk_0_V_read = ap_const_lv16_0) else "0";
end behav;
